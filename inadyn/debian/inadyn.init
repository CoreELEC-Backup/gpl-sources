#!/bin/sh
### BEGIN INIT INFO
# Provides:          inadyn
# Required-Start:    $network $local_fs $remote_fs $syslog
# Required-Stop:     $network $local_fs $remote_fs $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: DynDNS client
# Description:       Register an Internet name with your IP address
### END INIT INFO

# Author: Timur Birsh <taem@linukz.org>

PATH=/sbin:/usr/sbin:/bin:/usr/bin
DESC="DynDNS client"
NAME=inadyn
DAEMON=/usr/sbin/$NAME
RUNDIR=/run/$NAME
CACHEDIR=/var/cache/$NAME
PIDFILE=/$RUNDIR/$NAME.pid
SCRIPTNAME=/etc/init.d/$NAME
DEFAULT=/etc/default/$NAME

[ -x $DAEMON ] || exit 0
[ -r $DEFAULT ] && . $DEFAULT

. /lib/lsb/init-functions

# Set defaults values if no DEFAULT exist
RUN_DAEMON=${RUN_DAEMON:-no}
USER=${USER:-debian-inadyn}
GROUP=${GROUP:-debian-inadyn}

if [ "$RUN_DAEMON" != "yes" ] && [ "$1" != "stop" ]; then
	log_action_msg "$NAME: Not starting. Disabled in $DEFAULT"
	exit 0
fi

DAEMON_ARGS="--pidfile $PIDFILE \
             --background \
             --drop-privs $USER:$GROUP"

# Create essential dirs and chown, if missing
create_dirs() {
    for dir in $RUNDIR $CACHEDIR; do
	if [ ! -d $dir ]; then
            mkdir $dir
            chmod 0755 $dir
	    chown $USER:$GROUP $dir
	fi
    done
}

do_start()
{
	create_dirs
	start-stop-daemon --start --quiet --test \
			  --pidfile $PIDFILE --exec $DAEMON > /dev/null \
	    || return 1
	start-stop-daemon --start --quiet        \
			  --pidfile $PIDFILE --exec $DAEMON -- $DAEMON_ARGS \
	    || return 2
}

do_stop()
{
    start-stop-daemon --stop --quiet --retry=TERM/30/KILL/5 \
		      --pidfile $PIDFILE --name $NAME
    RETVAL="$?"
    [ "$RETVAL" = 2 ] && return 2
    rm -f $PIDFILE
    return "$RETVAL"
}

do_reload() {
    start-stop-daemon --stop --signal 1 --quiet --pidfile $PIDFILE --name $NAME
    return 0
}

case "$1" in
    start)
	log_daemon_msg "Starting $DESC " "$NAME"
	do_start
	case "$?" in
	    0|1) log_end_msg 0 ;;
	    2) log_end_msg 1 ;;
	esac
	;;
    stop)
	log_daemon_msg "Stopping $DESC" "$NAME"
	do_stop
	case "$?" in
	    0|1) log_end_msg 0 ;;
	    2) log_end_msg 1 ;;
	esac
	;;
    status)
	status_of_proc "$DAEMON" "$NAME" && exit 0 || exit $?
	;;
    reload|force-reload)
	log_daemon_msg "Reloading $DESC" "$NAME"
	do_reload
	log_end_msg $?
	;;
    restart)
	log_daemon_msg "Restarting $DESC" "$NAME"
	do_stop
	case "$?" in
	    0|1)
		do_start
		case "$?" in
		    0) log_end_msg 0 ;;
		    1) log_end_msg 1 ;; # Old process is still running
		    *) log_end_msg 1 ;; # Failed to start
		esac
		;;
	    *)
	  	# Failed to stop
		log_end_msg 1
		;;
	esac
	;;
    *)
	echo "Usage: $SCRIPTNAME {start|stop|status|restart|reload|force-reload}" >&2
	exit 3
	;;
esac

:
