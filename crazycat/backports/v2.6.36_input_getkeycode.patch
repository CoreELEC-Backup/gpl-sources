---
 drivers/media/rc/rc-main.c |   69 ++++++++++-----------------------------------
 1 file changed, 16 insertions(+), 53 deletions(-)

--- linux.orig/drivers/media/rc/rc-main.c
+++ linux/drivers/media/rc/rc-main.c
@@ -318,37 +318,23 @@ static unsigned int ir_establish_scancod
  * This routine is used to handle evdev EVIOCSKEY ioctl.
  */
 static int ir_setkeycode(struct input_dev *idev,
-			 const struct input_keymap_entry *ke,
-			 unsigned int *old_keycode)
+			 unsigned int scancode, unsigned int keycode)
 {
 	struct rc_dev *rdev = input_get_drvdata(idev);
 	struct rc_map *rc_map = &rdev->rc_map;
 	unsigned int index;
-	unsigned int scancode;
 	int retval = 0;
 	unsigned long flags;
 
 	spin_lock_irqsave(&rc_map->lock, flags);
 
-	if (ke->flags & INPUT_KEYMAP_BY_INDEX) {
-		index = ke->index;
-		if (index >= rc_map->len) {
-			retval = -EINVAL;
-			goto out;
-		}
-	} else {
-		retval = input_scancode_to_scalar(ke, &scancode);
-		if (retval)
-			goto out;
-
-		index = ir_establish_scancode(rdev, rc_map, scancode, true);
-		if (index >= rc_map->len) {
-			retval = -ENOMEM;
-			goto out;
-		}
+	index = ir_establish_scancode(rdev, rc_map, scancode, true);
+	if (index >= rc_map->len) {
+		retval = -ENOMEM;
+		goto out;
 	}
 
-	*old_keycode = ir_update_mapping(rdev, rc_map, index, ke->keycode);
+	ir_update_mapping(rdev, rc_map, index, keycode);
 
 out:
 	spin_unlock_irqrestore(&rc_map->lock, flags);
@@ -436,48 +422,25 @@ static unsigned int ir_lookup_by_scancod
  * This routine is used to handle evdev EVIOCGKEY ioctl.
  */
 static int ir_getkeycode(struct input_dev *idev,
-			 struct input_keymap_entry *ke)
+			 unsigned int scancode, unsigned int *keycode)
 {
 	struct rc_dev *rdev = input_get_drvdata(idev);
 	struct rc_map *rc_map = &rdev->rc_map;
-	struct rc_map_table *entry;
 	unsigned long flags;
 	unsigned int index;
-	unsigned int scancode;
 	int retval;
 
 	spin_lock_irqsave(&rc_map->lock, flags);
 
-	if (ke->flags & INPUT_KEYMAP_BY_INDEX) {
-		index = ke->index;
-	} else {
-		retval = input_scancode_to_scalar(ke, &scancode);
-		if (retval)
-			goto out;
-
-		index = ir_lookup_by_scancode(rc_map, scancode);
-	}
-
-	if (index < rc_map->len) {
-		entry = &rc_map->scan[index];
-
-		ke->index = index;
-		ke->keycode = entry->keycode;
-		ke->len = sizeof(entry->scancode);
-		memcpy(ke->scancode, &entry->scancode, sizeof(entry->scancode));
-
-	} else if (!(ke->flags & INPUT_KEYMAP_BY_INDEX)) {
-		/*
-		 * We do not really know the valid range of scancodes
-		 * so let's respond with KEY_RESERVED to anything we
-		 * do not have mapping for [yet].
-		 */
-		ke->index = index;
-		ke->keycode = KEY_RESERVED;
-	} else {
-		retval = -EINVAL;
-		goto out;
-	}
+	index = ir_lookup_by_scancode(rc_map, scancode);
+ 
+ 	if (index >= rc_map->len) {
+		*keycode = KEY_RESERVED;
+		retval = 0;
+ 		goto out;
+ 	}
+ 
+	*keycode = rc_map->scan[index].keycode;
 
 	retval = 0;
 
