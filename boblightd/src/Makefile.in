# Makefile.in generated by automake 1.11.1 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
# Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@


VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
bin_PROGRAMS = boblightd$(EXEEXT) boblight-constant$(EXEEXT) \
	$(am__EXEEXT_1) $(am__EXEEXT_2)
@HAVE_X11_TRUE@am__append_1 = boblight-X11
@HAVE_FFMPEG_TRUE@@HAVE_X11_TRUE@am__append_2 = boblight-v4l
@HAVE_OPENGL_TRUE@am__append_3 = clients/boblight-X11/vblanksignal.cpp
@HAVE_OPENGL_TRUE@am__append_4 = -lGL
@HAVE_PORTAUDIO_TRUE@am__append_5 = device/devicesound.cpp
@HAVE_PORTAUDIO_TRUE@am__append_6 = -lportaudio
@HAVE_LIBUSB_TRUE@am__append_7 = device/deviceibelight.cpp \
@HAVE_LIBUSB_TRUE@	device/devicelightpack.cpp

@HAVE_LIBUSB_TRUE@am__append_8 = -lusb-1.0
@HAVE_OLA_TRUE@am__append_9 = device/deviceola.cpp
@HAVE_OLA_TRUE@am__append_10 = -lola -lolacommon -lprotobuf
@HAVE_SPI_TRUE@am__append_11 = device/devicespi.cpp
subdir = src
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)"
LTLIBRARIES = $(lib_LTLIBRARIES)
libboblight_la_LIBADD =
am_libboblight_la_OBJECTS = libboblight_la-boblight_client.lo \
	libboblight_la-boblight.lo libboblight_la-messagequeue.lo \
	libboblight_la-misc.lo libboblight_la-tcpsocket.lo
libboblight_la_OBJECTS = $(am_libboblight_la_OBJECTS)
@HAVE_X11_TRUE@am__EXEEXT_1 = boblight-X11$(EXEEXT)
@HAVE_FFMPEG_TRUE@@HAVE_X11_TRUE@am__EXEEXT_2 = boblight-v4l$(EXEEXT)
PROGRAMS = $(bin_PROGRAMS)
am__boblight_X11_SOURCES_DIST = clients/boblight-X11/boblight-X11.cpp \
	util/timer.cpp util/condition.cpp util/mutex.cpp \
	util/thread.cpp util/misc.cpp util/timeutils.cpp \
	util/daemonize.cpp clients/boblight-X11/grabber-base.cpp \
	clients/boblight-X11/grabber-xgetimage.cpp \
	clients/boblight-X11/grabber-xrender.cpp \
	clients/boblight-X11/flagmanager-X11.cpp \
	clients/flagmanager.cpp clients/boblight-X11/vblanksignal.cpp
@HAVE_OPENGL_TRUE@am__objects_1 = vblanksignal.$(OBJEXT)
am_boblight_X11_OBJECTS = boblight-X11.$(OBJEXT) timer.$(OBJEXT) \
	condition.$(OBJEXT) mutex.$(OBJEXT) thread.$(OBJEXT) \
	misc.$(OBJEXT) timeutils.$(OBJEXT) daemonize.$(OBJEXT) \
	grabber-base.$(OBJEXT) grabber-xgetimage.$(OBJEXT) \
	grabber-xrender.$(OBJEXT) flagmanager-X11.$(OBJEXT) \
	flagmanager.$(OBJEXT) $(am__objects_1)
boblight_X11_OBJECTS = $(am_boblight_X11_OBJECTS)
boblight_X11_LDADD = $(LDADD)
boblight_X11_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(boblight_X11_LDFLAGS) $(LDFLAGS) -o $@
am_boblight_constant_OBJECTS = boblight-constant.$(OBJEXT) \
	flagmanager.$(OBJEXT) flagmanager-constant.$(OBJEXT) \
	misc.$(OBJEXT) daemonize.$(OBJEXT)
boblight_constant_OBJECTS = $(am_boblight_constant_OBJECTS)
boblight_constant_LDADD = $(LDADD)
am_boblight_v4l_OBJECTS = boblight-v4l.$(OBJEXT) \
	flagmanager-v4l.$(OBJEXT) misc.$(OBJEXT) flagmanager.$(OBJEXT) \
	videograbber.$(OBJEXT) daemonize.$(OBJEXT)
boblight_v4l_OBJECTS = $(am_boblight_v4l_OBJECTS)
boblight_v4l_LDADD = $(LDADD)
boblight_v4l_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(boblight_v4l_LDFLAGS) $(LDFLAGS) -o $@
am__boblightd_SOURCES_DIST = util/condition.cpp util/log.cpp \
	util/misc.cpp util/mutex.cpp util/thread.cpp util/timer.cpp \
	util/serialport.cpp util/timeutils.cpp main.cpp \
	util/tcpsocket.cpp util/messagequeue.cpp client.cpp light.cpp \
	configuration.cpp device/device.cpp device/devicepopen.cpp \
	device/devicers232.cpp device/deviceltbl.cpp \
	device/devicedioder.cpp device/deviceambioder.cpp \
	util/signaltimer.cpp util/daemonize.cpp device/devicesound.cpp \
	device/deviceibelight.cpp device/devicelightpack.cpp \
	device/deviceola.cpp device/devicespi.cpp
@HAVE_PORTAUDIO_TRUE@am__objects_2 = devicesound.$(OBJEXT)
@HAVE_LIBUSB_TRUE@am__objects_3 = deviceibelight.$(OBJEXT) \
@HAVE_LIBUSB_TRUE@	devicelightpack.$(OBJEXT)
@HAVE_OLA_TRUE@am__objects_4 = deviceola.$(OBJEXT)
@HAVE_SPI_TRUE@am__objects_5 = devicespi.$(OBJEXT)
am_boblightd_OBJECTS = condition.$(OBJEXT) log.$(OBJEXT) \
	misc.$(OBJEXT) mutex.$(OBJEXT) thread.$(OBJEXT) \
	timer.$(OBJEXT) serialport.$(OBJEXT) timeutils.$(OBJEXT) \
	main.$(OBJEXT) tcpsocket.$(OBJEXT) messagequeue.$(OBJEXT) \
	client.$(OBJEXT) light.$(OBJEXT) configuration.$(OBJEXT) \
	device.$(OBJEXT) devicepopen.$(OBJEXT) devicers232.$(OBJEXT) \
	deviceltbl.$(OBJEXT) devicedioder.$(OBJEXT) \
	deviceambioder.$(OBJEXT) signaltimer.$(OBJEXT) \
	daemonize.$(OBJEXT) $(am__objects_2) $(am__objects_3) \
	$(am__objects_4) $(am__objects_5)
boblightd_OBJECTS = $(am_boblightd_OBJECTS)
boblightd_DEPENDENCIES =
boblightd_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(boblightd_LDFLAGS) $(LDFLAGS) -o $@
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(libboblight_la_SOURCES) $(boblight_X11_SOURCES) \
	$(boblight_constant_SOURCES) $(boblight_v4l_SOURCES) \
	$(boblightd_SOURCES)
DIST_SOURCES = $(libboblight_la_SOURCES) \
	$(am__boblight_X11_SOURCES_DIST) $(boblight_constant_SOURCES) \
	$(boblight_v4l_SOURCES) $(am__boblightd_SOURCES_DIST)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DSYMUTIL = @DSYMUTIL@
DUMPBIN = @DUMPBIN@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
FGREP = @FGREP@
GREP = @GREP@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LD = @LD@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LIPO = @LIPO@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAINT = @MAINT@
MAKEINFO = @MAKEINFO@
MKDIR_P = @MKDIR_P@
NM = @NM@
NMEDIT = @NMEDIT@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
RANLIB = @RANLIB@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VERSION = @VERSION@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
lt_ECHO = @lt_ECHO@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
AM_CPPFLAGS = 
AM_CFLAGS = \
	 -Wall \
	 -g

boblight_v4l_SOURCES = \
	clients/boblight-v4l/boblight-v4l.cpp \
	clients/boblight-v4l/flagmanager-v4l.cpp \
	util/misc.cpp \
	clients/flagmanager.cpp \
	clients/boblight-v4l/videograbber.cpp \
        util/daemonize.cpp

boblight_v4l_LDFLAGS = -lavutil -lavcodec -lavformat -lswscale -lavdevice -lX11
boblight_constant_SOURCES = \
	clients/boblight-constant/boblight-constant.cpp \
	clients/flagmanager.cpp \
	clients/boblight-constant/flagmanager-constant.cpp \
	util/misc.cpp \
        util/daemonize.cpp

boblight_X11_SOURCES = clients/boblight-X11/boblight-X11.cpp \
	util/timer.cpp util/condition.cpp util/mutex.cpp \
	util/thread.cpp util/misc.cpp util/timeutils.cpp \
	util/daemonize.cpp clients/boblight-X11/grabber-base.cpp \
	clients/boblight-X11/grabber-xgetimage.cpp \
	clients/boblight-X11/grabber-xrender.cpp \
	clients/boblight-X11/flagmanager-X11.cpp \
	clients/flagmanager.cpp $(am__append_3)
boblight_X11_LDFLAGS = -lX11 -lXrender -lXext $(am__append_4)
boblightd_SOURCES = util/condition.cpp util/log.cpp util/misc.cpp \
	util/mutex.cpp util/thread.cpp util/timer.cpp \
	util/serialport.cpp util/timeutils.cpp main.cpp \
	util/tcpsocket.cpp util/messagequeue.cpp client.cpp light.cpp \
	configuration.cpp device/device.cpp device/devicepopen.cpp \
	device/devicers232.cpp device/deviceltbl.cpp \
	device/devicedioder.cpp device/deviceambioder.cpp \
	util/signaltimer.cpp util/daemonize.cpp $(am__append_5) \
	$(am__append_7) $(am__append_9) $(am__append_11)
boblightd_LDFLAGS = $(am__append_6) $(am__append_8) $(am__append_10)
boblightd_LDADD = 
lib_LTLIBRARIES = \
	libboblight.la

libboblight_la_SOURCES = \
	lib/boblight_client.cpp \
	lib/boblight.cpp \
	util/messagequeue.cpp \
	util/misc.cpp \
	util/tcpsocket.cpp

libboblight_la_CPPFLAGS = $(AM_CPPFLAGS)
all: all-am

.SUFFIXES:
.SUFFIXES: .cpp .lo .o .obj
$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu src/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu src/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: @MAINTAINER_MODE_TRUE@ $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): @MAINTAINER_MODE_TRUE@ $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(libdir)" || $(MKDIR_P) "$(DESTDIR)$(libdir)"
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(libdir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(libdir)"; \
	}

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$f"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libboblight.la: $(libboblight_la_OBJECTS) $(libboblight_la_DEPENDENCIES) 
	$(CXXLINK) -rpath $(libdir) $(libboblight_la_OBJECTS) $(libboblight_la_LIBADD) $(LIBS)
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(MKDIR_P) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p || test -f $$p1; \
	  then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' `; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
boblight-X11$(EXEEXT): $(boblight_X11_OBJECTS) $(boblight_X11_DEPENDENCIES) 
	@rm -f boblight-X11$(EXEEXT)
	$(boblight_X11_LINK) $(boblight_X11_OBJECTS) $(boblight_X11_LDADD) $(LIBS)
boblight-constant$(EXEEXT): $(boblight_constant_OBJECTS) $(boblight_constant_DEPENDENCIES) 
	@rm -f boblight-constant$(EXEEXT)
	$(CXXLINK) $(boblight_constant_OBJECTS) $(boblight_constant_LDADD) $(LIBS)
boblight-v4l$(EXEEXT): $(boblight_v4l_OBJECTS) $(boblight_v4l_DEPENDENCIES) 
	@rm -f boblight-v4l$(EXEEXT)
	$(boblight_v4l_LINK) $(boblight_v4l_OBJECTS) $(boblight_v4l_LDADD) $(LIBS)
boblightd$(EXEEXT): $(boblightd_OBJECTS) $(boblightd_DEPENDENCIES) 
	@rm -f boblightd$(EXEEXT)
	$(boblightd_LINK) $(boblightd_OBJECTS) $(boblightd_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/boblight-X11.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/boblight-constant.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/boblight-v4l.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/client.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/condition.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/configuration.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/daemonize.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/device.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/deviceambioder.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/devicedioder.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/deviceibelight.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/devicelightpack.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/deviceltbl.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/deviceola.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/devicepopen.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/devicers232.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/devicesound.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/devicespi.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/flagmanager-X11.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/flagmanager-constant.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/flagmanager-v4l.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/flagmanager.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/grabber-base.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/grabber-xgetimage.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/grabber-xrender.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libboblight_la-boblight.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libboblight_la-boblight_client.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libboblight_la-messagequeue.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libboblight_la-misc.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libboblight_la-tcpsocket.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/light.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/log.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/main.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/messagequeue.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/misc.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mutex.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/serialport.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/signaltimer.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tcpsocket.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/thread.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/timer.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/timeutils.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/vblanksignal.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/videograbber.Po@am__quote@

.cpp.o:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
@am__fastdepCXX_TRUE@	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LTCXXCOMPILE) -c -o $@ $<

libboblight_la-boblight_client.lo: lib/boblight_client.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libboblight_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libboblight_la-boblight_client.lo -MD -MP -MF $(DEPDIR)/libboblight_la-boblight_client.Tpo -c -o libboblight_la-boblight_client.lo `test -f 'lib/boblight_client.cpp' || echo '$(srcdir)/'`lib/boblight_client.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/libboblight_la-boblight_client.Tpo $(DEPDIR)/libboblight_la-boblight_client.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='lib/boblight_client.cpp' object='libboblight_la-boblight_client.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libboblight_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libboblight_la-boblight_client.lo `test -f 'lib/boblight_client.cpp' || echo '$(srcdir)/'`lib/boblight_client.cpp

libboblight_la-boblight.lo: lib/boblight.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libboblight_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libboblight_la-boblight.lo -MD -MP -MF $(DEPDIR)/libboblight_la-boblight.Tpo -c -o libboblight_la-boblight.lo `test -f 'lib/boblight.cpp' || echo '$(srcdir)/'`lib/boblight.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/libboblight_la-boblight.Tpo $(DEPDIR)/libboblight_la-boblight.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='lib/boblight.cpp' object='libboblight_la-boblight.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libboblight_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libboblight_la-boblight.lo `test -f 'lib/boblight.cpp' || echo '$(srcdir)/'`lib/boblight.cpp

libboblight_la-messagequeue.lo: util/messagequeue.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libboblight_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libboblight_la-messagequeue.lo -MD -MP -MF $(DEPDIR)/libboblight_la-messagequeue.Tpo -c -o libboblight_la-messagequeue.lo `test -f 'util/messagequeue.cpp' || echo '$(srcdir)/'`util/messagequeue.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/libboblight_la-messagequeue.Tpo $(DEPDIR)/libboblight_la-messagequeue.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='util/messagequeue.cpp' object='libboblight_la-messagequeue.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libboblight_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libboblight_la-messagequeue.lo `test -f 'util/messagequeue.cpp' || echo '$(srcdir)/'`util/messagequeue.cpp

libboblight_la-misc.lo: util/misc.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libboblight_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libboblight_la-misc.lo -MD -MP -MF $(DEPDIR)/libboblight_la-misc.Tpo -c -o libboblight_la-misc.lo `test -f 'util/misc.cpp' || echo '$(srcdir)/'`util/misc.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/libboblight_la-misc.Tpo $(DEPDIR)/libboblight_la-misc.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='util/misc.cpp' object='libboblight_la-misc.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libboblight_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libboblight_la-misc.lo `test -f 'util/misc.cpp' || echo '$(srcdir)/'`util/misc.cpp

libboblight_la-tcpsocket.lo: util/tcpsocket.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libboblight_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libboblight_la-tcpsocket.lo -MD -MP -MF $(DEPDIR)/libboblight_la-tcpsocket.Tpo -c -o libboblight_la-tcpsocket.lo `test -f 'util/tcpsocket.cpp' || echo '$(srcdir)/'`util/tcpsocket.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/libboblight_la-tcpsocket.Tpo $(DEPDIR)/libboblight_la-tcpsocket.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='util/tcpsocket.cpp' object='libboblight_la-tcpsocket.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libboblight_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libboblight_la-tcpsocket.lo `test -f 'util/tcpsocket.cpp' || echo '$(srcdir)/'`util/tcpsocket.cpp

boblight-X11.o: clients/boblight-X11/boblight-X11.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT boblight-X11.o -MD -MP -MF $(DEPDIR)/boblight-X11.Tpo -c -o boblight-X11.o `test -f 'clients/boblight-X11/boblight-X11.cpp' || echo '$(srcdir)/'`clients/boblight-X11/boblight-X11.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/boblight-X11.Tpo $(DEPDIR)/boblight-X11.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='clients/boblight-X11/boblight-X11.cpp' object='boblight-X11.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o boblight-X11.o `test -f 'clients/boblight-X11/boblight-X11.cpp' || echo '$(srcdir)/'`clients/boblight-X11/boblight-X11.cpp

boblight-X11.obj: clients/boblight-X11/boblight-X11.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT boblight-X11.obj -MD -MP -MF $(DEPDIR)/boblight-X11.Tpo -c -o boblight-X11.obj `if test -f 'clients/boblight-X11/boblight-X11.cpp'; then $(CYGPATH_W) 'clients/boblight-X11/boblight-X11.cpp'; else $(CYGPATH_W) '$(srcdir)/clients/boblight-X11/boblight-X11.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/boblight-X11.Tpo $(DEPDIR)/boblight-X11.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='clients/boblight-X11/boblight-X11.cpp' object='boblight-X11.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o boblight-X11.obj `if test -f 'clients/boblight-X11/boblight-X11.cpp'; then $(CYGPATH_W) 'clients/boblight-X11/boblight-X11.cpp'; else $(CYGPATH_W) '$(srcdir)/clients/boblight-X11/boblight-X11.cpp'; fi`

timer.o: util/timer.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT timer.o -MD -MP -MF $(DEPDIR)/timer.Tpo -c -o timer.o `test -f 'util/timer.cpp' || echo '$(srcdir)/'`util/timer.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/timer.Tpo $(DEPDIR)/timer.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='util/timer.cpp' object='timer.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o timer.o `test -f 'util/timer.cpp' || echo '$(srcdir)/'`util/timer.cpp

timer.obj: util/timer.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT timer.obj -MD -MP -MF $(DEPDIR)/timer.Tpo -c -o timer.obj `if test -f 'util/timer.cpp'; then $(CYGPATH_W) 'util/timer.cpp'; else $(CYGPATH_W) '$(srcdir)/util/timer.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/timer.Tpo $(DEPDIR)/timer.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='util/timer.cpp' object='timer.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o timer.obj `if test -f 'util/timer.cpp'; then $(CYGPATH_W) 'util/timer.cpp'; else $(CYGPATH_W) '$(srcdir)/util/timer.cpp'; fi`

condition.o: util/condition.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT condition.o -MD -MP -MF $(DEPDIR)/condition.Tpo -c -o condition.o `test -f 'util/condition.cpp' || echo '$(srcdir)/'`util/condition.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/condition.Tpo $(DEPDIR)/condition.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='util/condition.cpp' object='condition.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o condition.o `test -f 'util/condition.cpp' || echo '$(srcdir)/'`util/condition.cpp

condition.obj: util/condition.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT condition.obj -MD -MP -MF $(DEPDIR)/condition.Tpo -c -o condition.obj `if test -f 'util/condition.cpp'; then $(CYGPATH_W) 'util/condition.cpp'; else $(CYGPATH_W) '$(srcdir)/util/condition.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/condition.Tpo $(DEPDIR)/condition.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='util/condition.cpp' object='condition.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o condition.obj `if test -f 'util/condition.cpp'; then $(CYGPATH_W) 'util/condition.cpp'; else $(CYGPATH_W) '$(srcdir)/util/condition.cpp'; fi`

mutex.o: util/mutex.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mutex.o -MD -MP -MF $(DEPDIR)/mutex.Tpo -c -o mutex.o `test -f 'util/mutex.cpp' || echo '$(srcdir)/'`util/mutex.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/mutex.Tpo $(DEPDIR)/mutex.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='util/mutex.cpp' object='mutex.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mutex.o `test -f 'util/mutex.cpp' || echo '$(srcdir)/'`util/mutex.cpp

mutex.obj: util/mutex.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mutex.obj -MD -MP -MF $(DEPDIR)/mutex.Tpo -c -o mutex.obj `if test -f 'util/mutex.cpp'; then $(CYGPATH_W) 'util/mutex.cpp'; else $(CYGPATH_W) '$(srcdir)/util/mutex.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/mutex.Tpo $(DEPDIR)/mutex.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='util/mutex.cpp' object='mutex.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mutex.obj `if test -f 'util/mutex.cpp'; then $(CYGPATH_W) 'util/mutex.cpp'; else $(CYGPATH_W) '$(srcdir)/util/mutex.cpp'; fi`

thread.o: util/thread.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT thread.o -MD -MP -MF $(DEPDIR)/thread.Tpo -c -o thread.o `test -f 'util/thread.cpp' || echo '$(srcdir)/'`util/thread.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/thread.Tpo $(DEPDIR)/thread.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='util/thread.cpp' object='thread.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o thread.o `test -f 'util/thread.cpp' || echo '$(srcdir)/'`util/thread.cpp

thread.obj: util/thread.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT thread.obj -MD -MP -MF $(DEPDIR)/thread.Tpo -c -o thread.obj `if test -f 'util/thread.cpp'; then $(CYGPATH_W) 'util/thread.cpp'; else $(CYGPATH_W) '$(srcdir)/util/thread.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/thread.Tpo $(DEPDIR)/thread.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='util/thread.cpp' object='thread.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o thread.obj `if test -f 'util/thread.cpp'; then $(CYGPATH_W) 'util/thread.cpp'; else $(CYGPATH_W) '$(srcdir)/util/thread.cpp'; fi`

misc.o: util/misc.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT misc.o -MD -MP -MF $(DEPDIR)/misc.Tpo -c -o misc.o `test -f 'util/misc.cpp' || echo '$(srcdir)/'`util/misc.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/misc.Tpo $(DEPDIR)/misc.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='util/misc.cpp' object='misc.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o misc.o `test -f 'util/misc.cpp' || echo '$(srcdir)/'`util/misc.cpp

misc.obj: util/misc.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT misc.obj -MD -MP -MF $(DEPDIR)/misc.Tpo -c -o misc.obj `if test -f 'util/misc.cpp'; then $(CYGPATH_W) 'util/misc.cpp'; else $(CYGPATH_W) '$(srcdir)/util/misc.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/misc.Tpo $(DEPDIR)/misc.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='util/misc.cpp' object='misc.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o misc.obj `if test -f 'util/misc.cpp'; then $(CYGPATH_W) 'util/misc.cpp'; else $(CYGPATH_W) '$(srcdir)/util/misc.cpp'; fi`

timeutils.o: util/timeutils.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT timeutils.o -MD -MP -MF $(DEPDIR)/timeutils.Tpo -c -o timeutils.o `test -f 'util/timeutils.cpp' || echo '$(srcdir)/'`util/timeutils.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/timeutils.Tpo $(DEPDIR)/timeutils.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='util/timeutils.cpp' object='timeutils.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o timeutils.o `test -f 'util/timeutils.cpp' || echo '$(srcdir)/'`util/timeutils.cpp

timeutils.obj: util/timeutils.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT timeutils.obj -MD -MP -MF $(DEPDIR)/timeutils.Tpo -c -o timeutils.obj `if test -f 'util/timeutils.cpp'; then $(CYGPATH_W) 'util/timeutils.cpp'; else $(CYGPATH_W) '$(srcdir)/util/timeutils.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/timeutils.Tpo $(DEPDIR)/timeutils.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='util/timeutils.cpp' object='timeutils.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o timeutils.obj `if test -f 'util/timeutils.cpp'; then $(CYGPATH_W) 'util/timeutils.cpp'; else $(CYGPATH_W) '$(srcdir)/util/timeutils.cpp'; fi`

daemonize.o: util/daemonize.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT daemonize.o -MD -MP -MF $(DEPDIR)/daemonize.Tpo -c -o daemonize.o `test -f 'util/daemonize.cpp' || echo '$(srcdir)/'`util/daemonize.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/daemonize.Tpo $(DEPDIR)/daemonize.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='util/daemonize.cpp' object='daemonize.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o daemonize.o `test -f 'util/daemonize.cpp' || echo '$(srcdir)/'`util/daemonize.cpp

daemonize.obj: util/daemonize.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT daemonize.obj -MD -MP -MF $(DEPDIR)/daemonize.Tpo -c -o daemonize.obj `if test -f 'util/daemonize.cpp'; then $(CYGPATH_W) 'util/daemonize.cpp'; else $(CYGPATH_W) '$(srcdir)/util/daemonize.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/daemonize.Tpo $(DEPDIR)/daemonize.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='util/daemonize.cpp' object='daemonize.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o daemonize.obj `if test -f 'util/daemonize.cpp'; then $(CYGPATH_W) 'util/daemonize.cpp'; else $(CYGPATH_W) '$(srcdir)/util/daemonize.cpp'; fi`

grabber-base.o: clients/boblight-X11/grabber-base.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT grabber-base.o -MD -MP -MF $(DEPDIR)/grabber-base.Tpo -c -o grabber-base.o `test -f 'clients/boblight-X11/grabber-base.cpp' || echo '$(srcdir)/'`clients/boblight-X11/grabber-base.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/grabber-base.Tpo $(DEPDIR)/grabber-base.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='clients/boblight-X11/grabber-base.cpp' object='grabber-base.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o grabber-base.o `test -f 'clients/boblight-X11/grabber-base.cpp' || echo '$(srcdir)/'`clients/boblight-X11/grabber-base.cpp

grabber-base.obj: clients/boblight-X11/grabber-base.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT grabber-base.obj -MD -MP -MF $(DEPDIR)/grabber-base.Tpo -c -o grabber-base.obj `if test -f 'clients/boblight-X11/grabber-base.cpp'; then $(CYGPATH_W) 'clients/boblight-X11/grabber-base.cpp'; else $(CYGPATH_W) '$(srcdir)/clients/boblight-X11/grabber-base.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/grabber-base.Tpo $(DEPDIR)/grabber-base.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='clients/boblight-X11/grabber-base.cpp' object='grabber-base.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o grabber-base.obj `if test -f 'clients/boblight-X11/grabber-base.cpp'; then $(CYGPATH_W) 'clients/boblight-X11/grabber-base.cpp'; else $(CYGPATH_W) '$(srcdir)/clients/boblight-X11/grabber-base.cpp'; fi`

grabber-xgetimage.o: clients/boblight-X11/grabber-xgetimage.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT grabber-xgetimage.o -MD -MP -MF $(DEPDIR)/grabber-xgetimage.Tpo -c -o grabber-xgetimage.o `test -f 'clients/boblight-X11/grabber-xgetimage.cpp' || echo '$(srcdir)/'`clients/boblight-X11/grabber-xgetimage.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/grabber-xgetimage.Tpo $(DEPDIR)/grabber-xgetimage.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='clients/boblight-X11/grabber-xgetimage.cpp' object='grabber-xgetimage.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o grabber-xgetimage.o `test -f 'clients/boblight-X11/grabber-xgetimage.cpp' || echo '$(srcdir)/'`clients/boblight-X11/grabber-xgetimage.cpp

grabber-xgetimage.obj: clients/boblight-X11/grabber-xgetimage.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT grabber-xgetimage.obj -MD -MP -MF $(DEPDIR)/grabber-xgetimage.Tpo -c -o grabber-xgetimage.obj `if test -f 'clients/boblight-X11/grabber-xgetimage.cpp'; then $(CYGPATH_W) 'clients/boblight-X11/grabber-xgetimage.cpp'; else $(CYGPATH_W) '$(srcdir)/clients/boblight-X11/grabber-xgetimage.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/grabber-xgetimage.Tpo $(DEPDIR)/grabber-xgetimage.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='clients/boblight-X11/grabber-xgetimage.cpp' object='grabber-xgetimage.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o grabber-xgetimage.obj `if test -f 'clients/boblight-X11/grabber-xgetimage.cpp'; then $(CYGPATH_W) 'clients/boblight-X11/grabber-xgetimage.cpp'; else $(CYGPATH_W) '$(srcdir)/clients/boblight-X11/grabber-xgetimage.cpp'; fi`

grabber-xrender.o: clients/boblight-X11/grabber-xrender.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT grabber-xrender.o -MD -MP -MF $(DEPDIR)/grabber-xrender.Tpo -c -o grabber-xrender.o `test -f 'clients/boblight-X11/grabber-xrender.cpp' || echo '$(srcdir)/'`clients/boblight-X11/grabber-xrender.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/grabber-xrender.Tpo $(DEPDIR)/grabber-xrender.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='clients/boblight-X11/grabber-xrender.cpp' object='grabber-xrender.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o grabber-xrender.o `test -f 'clients/boblight-X11/grabber-xrender.cpp' || echo '$(srcdir)/'`clients/boblight-X11/grabber-xrender.cpp

grabber-xrender.obj: clients/boblight-X11/grabber-xrender.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT grabber-xrender.obj -MD -MP -MF $(DEPDIR)/grabber-xrender.Tpo -c -o grabber-xrender.obj `if test -f 'clients/boblight-X11/grabber-xrender.cpp'; then $(CYGPATH_W) 'clients/boblight-X11/grabber-xrender.cpp'; else $(CYGPATH_W) '$(srcdir)/clients/boblight-X11/grabber-xrender.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/grabber-xrender.Tpo $(DEPDIR)/grabber-xrender.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='clients/boblight-X11/grabber-xrender.cpp' object='grabber-xrender.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o grabber-xrender.obj `if test -f 'clients/boblight-X11/grabber-xrender.cpp'; then $(CYGPATH_W) 'clients/boblight-X11/grabber-xrender.cpp'; else $(CYGPATH_W) '$(srcdir)/clients/boblight-X11/grabber-xrender.cpp'; fi`

flagmanager-X11.o: clients/boblight-X11/flagmanager-X11.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT flagmanager-X11.o -MD -MP -MF $(DEPDIR)/flagmanager-X11.Tpo -c -o flagmanager-X11.o `test -f 'clients/boblight-X11/flagmanager-X11.cpp' || echo '$(srcdir)/'`clients/boblight-X11/flagmanager-X11.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/flagmanager-X11.Tpo $(DEPDIR)/flagmanager-X11.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='clients/boblight-X11/flagmanager-X11.cpp' object='flagmanager-X11.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o flagmanager-X11.o `test -f 'clients/boblight-X11/flagmanager-X11.cpp' || echo '$(srcdir)/'`clients/boblight-X11/flagmanager-X11.cpp

flagmanager-X11.obj: clients/boblight-X11/flagmanager-X11.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT flagmanager-X11.obj -MD -MP -MF $(DEPDIR)/flagmanager-X11.Tpo -c -o flagmanager-X11.obj `if test -f 'clients/boblight-X11/flagmanager-X11.cpp'; then $(CYGPATH_W) 'clients/boblight-X11/flagmanager-X11.cpp'; else $(CYGPATH_W) '$(srcdir)/clients/boblight-X11/flagmanager-X11.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/flagmanager-X11.Tpo $(DEPDIR)/flagmanager-X11.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='clients/boblight-X11/flagmanager-X11.cpp' object='flagmanager-X11.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o flagmanager-X11.obj `if test -f 'clients/boblight-X11/flagmanager-X11.cpp'; then $(CYGPATH_W) 'clients/boblight-X11/flagmanager-X11.cpp'; else $(CYGPATH_W) '$(srcdir)/clients/boblight-X11/flagmanager-X11.cpp'; fi`

flagmanager.o: clients/flagmanager.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT flagmanager.o -MD -MP -MF $(DEPDIR)/flagmanager.Tpo -c -o flagmanager.o `test -f 'clients/flagmanager.cpp' || echo '$(srcdir)/'`clients/flagmanager.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/flagmanager.Tpo $(DEPDIR)/flagmanager.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='clients/flagmanager.cpp' object='flagmanager.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o flagmanager.o `test -f 'clients/flagmanager.cpp' || echo '$(srcdir)/'`clients/flagmanager.cpp

flagmanager.obj: clients/flagmanager.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT flagmanager.obj -MD -MP -MF $(DEPDIR)/flagmanager.Tpo -c -o flagmanager.obj `if test -f 'clients/flagmanager.cpp'; then $(CYGPATH_W) 'clients/flagmanager.cpp'; else $(CYGPATH_W) '$(srcdir)/clients/flagmanager.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/flagmanager.Tpo $(DEPDIR)/flagmanager.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='clients/flagmanager.cpp' object='flagmanager.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o flagmanager.obj `if test -f 'clients/flagmanager.cpp'; then $(CYGPATH_W) 'clients/flagmanager.cpp'; else $(CYGPATH_W) '$(srcdir)/clients/flagmanager.cpp'; fi`

vblanksignal.o: clients/boblight-X11/vblanksignal.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT vblanksignal.o -MD -MP -MF $(DEPDIR)/vblanksignal.Tpo -c -o vblanksignal.o `test -f 'clients/boblight-X11/vblanksignal.cpp' || echo '$(srcdir)/'`clients/boblight-X11/vblanksignal.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/vblanksignal.Tpo $(DEPDIR)/vblanksignal.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='clients/boblight-X11/vblanksignal.cpp' object='vblanksignal.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o vblanksignal.o `test -f 'clients/boblight-X11/vblanksignal.cpp' || echo '$(srcdir)/'`clients/boblight-X11/vblanksignal.cpp

vblanksignal.obj: clients/boblight-X11/vblanksignal.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT vblanksignal.obj -MD -MP -MF $(DEPDIR)/vblanksignal.Tpo -c -o vblanksignal.obj `if test -f 'clients/boblight-X11/vblanksignal.cpp'; then $(CYGPATH_W) 'clients/boblight-X11/vblanksignal.cpp'; else $(CYGPATH_W) '$(srcdir)/clients/boblight-X11/vblanksignal.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/vblanksignal.Tpo $(DEPDIR)/vblanksignal.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='clients/boblight-X11/vblanksignal.cpp' object='vblanksignal.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o vblanksignal.obj `if test -f 'clients/boblight-X11/vblanksignal.cpp'; then $(CYGPATH_W) 'clients/boblight-X11/vblanksignal.cpp'; else $(CYGPATH_W) '$(srcdir)/clients/boblight-X11/vblanksignal.cpp'; fi`

boblight-constant.o: clients/boblight-constant/boblight-constant.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT boblight-constant.o -MD -MP -MF $(DEPDIR)/boblight-constant.Tpo -c -o boblight-constant.o `test -f 'clients/boblight-constant/boblight-constant.cpp' || echo '$(srcdir)/'`clients/boblight-constant/boblight-constant.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/boblight-constant.Tpo $(DEPDIR)/boblight-constant.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='clients/boblight-constant/boblight-constant.cpp' object='boblight-constant.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o boblight-constant.o `test -f 'clients/boblight-constant/boblight-constant.cpp' || echo '$(srcdir)/'`clients/boblight-constant/boblight-constant.cpp

boblight-constant.obj: clients/boblight-constant/boblight-constant.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT boblight-constant.obj -MD -MP -MF $(DEPDIR)/boblight-constant.Tpo -c -o boblight-constant.obj `if test -f 'clients/boblight-constant/boblight-constant.cpp'; then $(CYGPATH_W) 'clients/boblight-constant/boblight-constant.cpp'; else $(CYGPATH_W) '$(srcdir)/clients/boblight-constant/boblight-constant.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/boblight-constant.Tpo $(DEPDIR)/boblight-constant.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='clients/boblight-constant/boblight-constant.cpp' object='boblight-constant.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o boblight-constant.obj `if test -f 'clients/boblight-constant/boblight-constant.cpp'; then $(CYGPATH_W) 'clients/boblight-constant/boblight-constant.cpp'; else $(CYGPATH_W) '$(srcdir)/clients/boblight-constant/boblight-constant.cpp'; fi`

flagmanager-constant.o: clients/boblight-constant/flagmanager-constant.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT flagmanager-constant.o -MD -MP -MF $(DEPDIR)/flagmanager-constant.Tpo -c -o flagmanager-constant.o `test -f 'clients/boblight-constant/flagmanager-constant.cpp' || echo '$(srcdir)/'`clients/boblight-constant/flagmanager-constant.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/flagmanager-constant.Tpo $(DEPDIR)/flagmanager-constant.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='clients/boblight-constant/flagmanager-constant.cpp' object='flagmanager-constant.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o flagmanager-constant.o `test -f 'clients/boblight-constant/flagmanager-constant.cpp' || echo '$(srcdir)/'`clients/boblight-constant/flagmanager-constant.cpp

flagmanager-constant.obj: clients/boblight-constant/flagmanager-constant.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT flagmanager-constant.obj -MD -MP -MF $(DEPDIR)/flagmanager-constant.Tpo -c -o flagmanager-constant.obj `if test -f 'clients/boblight-constant/flagmanager-constant.cpp'; then $(CYGPATH_W) 'clients/boblight-constant/flagmanager-constant.cpp'; else $(CYGPATH_W) '$(srcdir)/clients/boblight-constant/flagmanager-constant.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/flagmanager-constant.Tpo $(DEPDIR)/flagmanager-constant.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='clients/boblight-constant/flagmanager-constant.cpp' object='flagmanager-constant.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o flagmanager-constant.obj `if test -f 'clients/boblight-constant/flagmanager-constant.cpp'; then $(CYGPATH_W) 'clients/boblight-constant/flagmanager-constant.cpp'; else $(CYGPATH_W) '$(srcdir)/clients/boblight-constant/flagmanager-constant.cpp'; fi`

boblight-v4l.o: clients/boblight-v4l/boblight-v4l.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT boblight-v4l.o -MD -MP -MF $(DEPDIR)/boblight-v4l.Tpo -c -o boblight-v4l.o `test -f 'clients/boblight-v4l/boblight-v4l.cpp' || echo '$(srcdir)/'`clients/boblight-v4l/boblight-v4l.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/boblight-v4l.Tpo $(DEPDIR)/boblight-v4l.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='clients/boblight-v4l/boblight-v4l.cpp' object='boblight-v4l.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o boblight-v4l.o `test -f 'clients/boblight-v4l/boblight-v4l.cpp' || echo '$(srcdir)/'`clients/boblight-v4l/boblight-v4l.cpp

boblight-v4l.obj: clients/boblight-v4l/boblight-v4l.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT boblight-v4l.obj -MD -MP -MF $(DEPDIR)/boblight-v4l.Tpo -c -o boblight-v4l.obj `if test -f 'clients/boblight-v4l/boblight-v4l.cpp'; then $(CYGPATH_W) 'clients/boblight-v4l/boblight-v4l.cpp'; else $(CYGPATH_W) '$(srcdir)/clients/boblight-v4l/boblight-v4l.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/boblight-v4l.Tpo $(DEPDIR)/boblight-v4l.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='clients/boblight-v4l/boblight-v4l.cpp' object='boblight-v4l.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o boblight-v4l.obj `if test -f 'clients/boblight-v4l/boblight-v4l.cpp'; then $(CYGPATH_W) 'clients/boblight-v4l/boblight-v4l.cpp'; else $(CYGPATH_W) '$(srcdir)/clients/boblight-v4l/boblight-v4l.cpp'; fi`

flagmanager-v4l.o: clients/boblight-v4l/flagmanager-v4l.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT flagmanager-v4l.o -MD -MP -MF $(DEPDIR)/flagmanager-v4l.Tpo -c -o flagmanager-v4l.o `test -f 'clients/boblight-v4l/flagmanager-v4l.cpp' || echo '$(srcdir)/'`clients/boblight-v4l/flagmanager-v4l.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/flagmanager-v4l.Tpo $(DEPDIR)/flagmanager-v4l.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='clients/boblight-v4l/flagmanager-v4l.cpp' object='flagmanager-v4l.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o flagmanager-v4l.o `test -f 'clients/boblight-v4l/flagmanager-v4l.cpp' || echo '$(srcdir)/'`clients/boblight-v4l/flagmanager-v4l.cpp

flagmanager-v4l.obj: clients/boblight-v4l/flagmanager-v4l.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT flagmanager-v4l.obj -MD -MP -MF $(DEPDIR)/flagmanager-v4l.Tpo -c -o flagmanager-v4l.obj `if test -f 'clients/boblight-v4l/flagmanager-v4l.cpp'; then $(CYGPATH_W) 'clients/boblight-v4l/flagmanager-v4l.cpp'; else $(CYGPATH_W) '$(srcdir)/clients/boblight-v4l/flagmanager-v4l.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/flagmanager-v4l.Tpo $(DEPDIR)/flagmanager-v4l.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='clients/boblight-v4l/flagmanager-v4l.cpp' object='flagmanager-v4l.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o flagmanager-v4l.obj `if test -f 'clients/boblight-v4l/flagmanager-v4l.cpp'; then $(CYGPATH_W) 'clients/boblight-v4l/flagmanager-v4l.cpp'; else $(CYGPATH_W) '$(srcdir)/clients/boblight-v4l/flagmanager-v4l.cpp'; fi`

videograbber.o: clients/boblight-v4l/videograbber.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT videograbber.o -MD -MP -MF $(DEPDIR)/videograbber.Tpo -c -o videograbber.o `test -f 'clients/boblight-v4l/videograbber.cpp' || echo '$(srcdir)/'`clients/boblight-v4l/videograbber.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/videograbber.Tpo $(DEPDIR)/videograbber.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='clients/boblight-v4l/videograbber.cpp' object='videograbber.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o videograbber.o `test -f 'clients/boblight-v4l/videograbber.cpp' || echo '$(srcdir)/'`clients/boblight-v4l/videograbber.cpp

videograbber.obj: clients/boblight-v4l/videograbber.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT videograbber.obj -MD -MP -MF $(DEPDIR)/videograbber.Tpo -c -o videograbber.obj `if test -f 'clients/boblight-v4l/videograbber.cpp'; then $(CYGPATH_W) 'clients/boblight-v4l/videograbber.cpp'; else $(CYGPATH_W) '$(srcdir)/clients/boblight-v4l/videograbber.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/videograbber.Tpo $(DEPDIR)/videograbber.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='clients/boblight-v4l/videograbber.cpp' object='videograbber.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o videograbber.obj `if test -f 'clients/boblight-v4l/videograbber.cpp'; then $(CYGPATH_W) 'clients/boblight-v4l/videograbber.cpp'; else $(CYGPATH_W) '$(srcdir)/clients/boblight-v4l/videograbber.cpp'; fi`

log.o: util/log.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT log.o -MD -MP -MF $(DEPDIR)/log.Tpo -c -o log.o `test -f 'util/log.cpp' || echo '$(srcdir)/'`util/log.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/log.Tpo $(DEPDIR)/log.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='util/log.cpp' object='log.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o log.o `test -f 'util/log.cpp' || echo '$(srcdir)/'`util/log.cpp

log.obj: util/log.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT log.obj -MD -MP -MF $(DEPDIR)/log.Tpo -c -o log.obj `if test -f 'util/log.cpp'; then $(CYGPATH_W) 'util/log.cpp'; else $(CYGPATH_W) '$(srcdir)/util/log.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/log.Tpo $(DEPDIR)/log.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='util/log.cpp' object='log.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o log.obj `if test -f 'util/log.cpp'; then $(CYGPATH_W) 'util/log.cpp'; else $(CYGPATH_W) '$(srcdir)/util/log.cpp'; fi`

serialport.o: util/serialport.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT serialport.o -MD -MP -MF $(DEPDIR)/serialport.Tpo -c -o serialport.o `test -f 'util/serialport.cpp' || echo '$(srcdir)/'`util/serialport.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/serialport.Tpo $(DEPDIR)/serialport.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='util/serialport.cpp' object='serialport.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o serialport.o `test -f 'util/serialport.cpp' || echo '$(srcdir)/'`util/serialport.cpp

serialport.obj: util/serialport.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT serialport.obj -MD -MP -MF $(DEPDIR)/serialport.Tpo -c -o serialport.obj `if test -f 'util/serialport.cpp'; then $(CYGPATH_W) 'util/serialport.cpp'; else $(CYGPATH_W) '$(srcdir)/util/serialport.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/serialport.Tpo $(DEPDIR)/serialport.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='util/serialport.cpp' object='serialport.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o serialport.obj `if test -f 'util/serialport.cpp'; then $(CYGPATH_W) 'util/serialport.cpp'; else $(CYGPATH_W) '$(srcdir)/util/serialport.cpp'; fi`

tcpsocket.o: util/tcpsocket.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tcpsocket.o -MD -MP -MF $(DEPDIR)/tcpsocket.Tpo -c -o tcpsocket.o `test -f 'util/tcpsocket.cpp' || echo '$(srcdir)/'`util/tcpsocket.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/tcpsocket.Tpo $(DEPDIR)/tcpsocket.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='util/tcpsocket.cpp' object='tcpsocket.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tcpsocket.o `test -f 'util/tcpsocket.cpp' || echo '$(srcdir)/'`util/tcpsocket.cpp

tcpsocket.obj: util/tcpsocket.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tcpsocket.obj -MD -MP -MF $(DEPDIR)/tcpsocket.Tpo -c -o tcpsocket.obj `if test -f 'util/tcpsocket.cpp'; then $(CYGPATH_W) 'util/tcpsocket.cpp'; else $(CYGPATH_W) '$(srcdir)/util/tcpsocket.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/tcpsocket.Tpo $(DEPDIR)/tcpsocket.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='util/tcpsocket.cpp' object='tcpsocket.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tcpsocket.obj `if test -f 'util/tcpsocket.cpp'; then $(CYGPATH_W) 'util/tcpsocket.cpp'; else $(CYGPATH_W) '$(srcdir)/util/tcpsocket.cpp'; fi`

messagequeue.o: util/messagequeue.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT messagequeue.o -MD -MP -MF $(DEPDIR)/messagequeue.Tpo -c -o messagequeue.o `test -f 'util/messagequeue.cpp' || echo '$(srcdir)/'`util/messagequeue.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/messagequeue.Tpo $(DEPDIR)/messagequeue.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='util/messagequeue.cpp' object='messagequeue.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o messagequeue.o `test -f 'util/messagequeue.cpp' || echo '$(srcdir)/'`util/messagequeue.cpp

messagequeue.obj: util/messagequeue.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT messagequeue.obj -MD -MP -MF $(DEPDIR)/messagequeue.Tpo -c -o messagequeue.obj `if test -f 'util/messagequeue.cpp'; then $(CYGPATH_W) 'util/messagequeue.cpp'; else $(CYGPATH_W) '$(srcdir)/util/messagequeue.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/messagequeue.Tpo $(DEPDIR)/messagequeue.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='util/messagequeue.cpp' object='messagequeue.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o messagequeue.obj `if test -f 'util/messagequeue.cpp'; then $(CYGPATH_W) 'util/messagequeue.cpp'; else $(CYGPATH_W) '$(srcdir)/util/messagequeue.cpp'; fi`

device.o: device/device.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT device.o -MD -MP -MF $(DEPDIR)/device.Tpo -c -o device.o `test -f 'device/device.cpp' || echo '$(srcdir)/'`device/device.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/device.Tpo $(DEPDIR)/device.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='device/device.cpp' object='device.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o device.o `test -f 'device/device.cpp' || echo '$(srcdir)/'`device/device.cpp

device.obj: device/device.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT device.obj -MD -MP -MF $(DEPDIR)/device.Tpo -c -o device.obj `if test -f 'device/device.cpp'; then $(CYGPATH_W) 'device/device.cpp'; else $(CYGPATH_W) '$(srcdir)/device/device.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/device.Tpo $(DEPDIR)/device.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='device/device.cpp' object='device.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o device.obj `if test -f 'device/device.cpp'; then $(CYGPATH_W) 'device/device.cpp'; else $(CYGPATH_W) '$(srcdir)/device/device.cpp'; fi`

devicepopen.o: device/devicepopen.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT devicepopen.o -MD -MP -MF $(DEPDIR)/devicepopen.Tpo -c -o devicepopen.o `test -f 'device/devicepopen.cpp' || echo '$(srcdir)/'`device/devicepopen.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/devicepopen.Tpo $(DEPDIR)/devicepopen.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='device/devicepopen.cpp' object='devicepopen.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o devicepopen.o `test -f 'device/devicepopen.cpp' || echo '$(srcdir)/'`device/devicepopen.cpp

devicepopen.obj: device/devicepopen.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT devicepopen.obj -MD -MP -MF $(DEPDIR)/devicepopen.Tpo -c -o devicepopen.obj `if test -f 'device/devicepopen.cpp'; then $(CYGPATH_W) 'device/devicepopen.cpp'; else $(CYGPATH_W) '$(srcdir)/device/devicepopen.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/devicepopen.Tpo $(DEPDIR)/devicepopen.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='device/devicepopen.cpp' object='devicepopen.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o devicepopen.obj `if test -f 'device/devicepopen.cpp'; then $(CYGPATH_W) 'device/devicepopen.cpp'; else $(CYGPATH_W) '$(srcdir)/device/devicepopen.cpp'; fi`

devicers232.o: device/devicers232.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT devicers232.o -MD -MP -MF $(DEPDIR)/devicers232.Tpo -c -o devicers232.o `test -f 'device/devicers232.cpp' || echo '$(srcdir)/'`device/devicers232.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/devicers232.Tpo $(DEPDIR)/devicers232.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='device/devicers232.cpp' object='devicers232.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o devicers232.o `test -f 'device/devicers232.cpp' || echo '$(srcdir)/'`device/devicers232.cpp

devicers232.obj: device/devicers232.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT devicers232.obj -MD -MP -MF $(DEPDIR)/devicers232.Tpo -c -o devicers232.obj `if test -f 'device/devicers232.cpp'; then $(CYGPATH_W) 'device/devicers232.cpp'; else $(CYGPATH_W) '$(srcdir)/device/devicers232.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/devicers232.Tpo $(DEPDIR)/devicers232.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='device/devicers232.cpp' object='devicers232.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o devicers232.obj `if test -f 'device/devicers232.cpp'; then $(CYGPATH_W) 'device/devicers232.cpp'; else $(CYGPATH_W) '$(srcdir)/device/devicers232.cpp'; fi`

deviceltbl.o: device/deviceltbl.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT deviceltbl.o -MD -MP -MF $(DEPDIR)/deviceltbl.Tpo -c -o deviceltbl.o `test -f 'device/deviceltbl.cpp' || echo '$(srcdir)/'`device/deviceltbl.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/deviceltbl.Tpo $(DEPDIR)/deviceltbl.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='device/deviceltbl.cpp' object='deviceltbl.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o deviceltbl.o `test -f 'device/deviceltbl.cpp' || echo '$(srcdir)/'`device/deviceltbl.cpp

deviceltbl.obj: device/deviceltbl.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT deviceltbl.obj -MD -MP -MF $(DEPDIR)/deviceltbl.Tpo -c -o deviceltbl.obj `if test -f 'device/deviceltbl.cpp'; then $(CYGPATH_W) 'device/deviceltbl.cpp'; else $(CYGPATH_W) '$(srcdir)/device/deviceltbl.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/deviceltbl.Tpo $(DEPDIR)/deviceltbl.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='device/deviceltbl.cpp' object='deviceltbl.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o deviceltbl.obj `if test -f 'device/deviceltbl.cpp'; then $(CYGPATH_W) 'device/deviceltbl.cpp'; else $(CYGPATH_W) '$(srcdir)/device/deviceltbl.cpp'; fi`

devicedioder.o: device/devicedioder.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT devicedioder.o -MD -MP -MF $(DEPDIR)/devicedioder.Tpo -c -o devicedioder.o `test -f 'device/devicedioder.cpp' || echo '$(srcdir)/'`device/devicedioder.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/devicedioder.Tpo $(DEPDIR)/devicedioder.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='device/devicedioder.cpp' object='devicedioder.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o devicedioder.o `test -f 'device/devicedioder.cpp' || echo '$(srcdir)/'`device/devicedioder.cpp

devicedioder.obj: device/devicedioder.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT devicedioder.obj -MD -MP -MF $(DEPDIR)/devicedioder.Tpo -c -o devicedioder.obj `if test -f 'device/devicedioder.cpp'; then $(CYGPATH_W) 'device/devicedioder.cpp'; else $(CYGPATH_W) '$(srcdir)/device/devicedioder.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/devicedioder.Tpo $(DEPDIR)/devicedioder.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='device/devicedioder.cpp' object='devicedioder.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o devicedioder.obj `if test -f 'device/devicedioder.cpp'; then $(CYGPATH_W) 'device/devicedioder.cpp'; else $(CYGPATH_W) '$(srcdir)/device/devicedioder.cpp'; fi`

deviceambioder.o: device/deviceambioder.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT deviceambioder.o -MD -MP -MF $(DEPDIR)/deviceambioder.Tpo -c -o deviceambioder.o `test -f 'device/deviceambioder.cpp' || echo '$(srcdir)/'`device/deviceambioder.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/deviceambioder.Tpo $(DEPDIR)/deviceambioder.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='device/deviceambioder.cpp' object='deviceambioder.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o deviceambioder.o `test -f 'device/deviceambioder.cpp' || echo '$(srcdir)/'`device/deviceambioder.cpp

deviceambioder.obj: device/deviceambioder.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT deviceambioder.obj -MD -MP -MF $(DEPDIR)/deviceambioder.Tpo -c -o deviceambioder.obj `if test -f 'device/deviceambioder.cpp'; then $(CYGPATH_W) 'device/deviceambioder.cpp'; else $(CYGPATH_W) '$(srcdir)/device/deviceambioder.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/deviceambioder.Tpo $(DEPDIR)/deviceambioder.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='device/deviceambioder.cpp' object='deviceambioder.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o deviceambioder.obj `if test -f 'device/deviceambioder.cpp'; then $(CYGPATH_W) 'device/deviceambioder.cpp'; else $(CYGPATH_W) '$(srcdir)/device/deviceambioder.cpp'; fi`

signaltimer.o: util/signaltimer.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT signaltimer.o -MD -MP -MF $(DEPDIR)/signaltimer.Tpo -c -o signaltimer.o `test -f 'util/signaltimer.cpp' || echo '$(srcdir)/'`util/signaltimer.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/signaltimer.Tpo $(DEPDIR)/signaltimer.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='util/signaltimer.cpp' object='signaltimer.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o signaltimer.o `test -f 'util/signaltimer.cpp' || echo '$(srcdir)/'`util/signaltimer.cpp

signaltimer.obj: util/signaltimer.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT signaltimer.obj -MD -MP -MF $(DEPDIR)/signaltimer.Tpo -c -o signaltimer.obj `if test -f 'util/signaltimer.cpp'; then $(CYGPATH_W) 'util/signaltimer.cpp'; else $(CYGPATH_W) '$(srcdir)/util/signaltimer.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/signaltimer.Tpo $(DEPDIR)/signaltimer.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='util/signaltimer.cpp' object='signaltimer.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o signaltimer.obj `if test -f 'util/signaltimer.cpp'; then $(CYGPATH_W) 'util/signaltimer.cpp'; else $(CYGPATH_W) '$(srcdir)/util/signaltimer.cpp'; fi`

devicesound.o: device/devicesound.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT devicesound.o -MD -MP -MF $(DEPDIR)/devicesound.Tpo -c -o devicesound.o `test -f 'device/devicesound.cpp' || echo '$(srcdir)/'`device/devicesound.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/devicesound.Tpo $(DEPDIR)/devicesound.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='device/devicesound.cpp' object='devicesound.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o devicesound.o `test -f 'device/devicesound.cpp' || echo '$(srcdir)/'`device/devicesound.cpp

devicesound.obj: device/devicesound.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT devicesound.obj -MD -MP -MF $(DEPDIR)/devicesound.Tpo -c -o devicesound.obj `if test -f 'device/devicesound.cpp'; then $(CYGPATH_W) 'device/devicesound.cpp'; else $(CYGPATH_W) '$(srcdir)/device/devicesound.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/devicesound.Tpo $(DEPDIR)/devicesound.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='device/devicesound.cpp' object='devicesound.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o devicesound.obj `if test -f 'device/devicesound.cpp'; then $(CYGPATH_W) 'device/devicesound.cpp'; else $(CYGPATH_W) '$(srcdir)/device/devicesound.cpp'; fi`

deviceibelight.o: device/deviceibelight.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT deviceibelight.o -MD -MP -MF $(DEPDIR)/deviceibelight.Tpo -c -o deviceibelight.o `test -f 'device/deviceibelight.cpp' || echo '$(srcdir)/'`device/deviceibelight.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/deviceibelight.Tpo $(DEPDIR)/deviceibelight.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='device/deviceibelight.cpp' object='deviceibelight.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o deviceibelight.o `test -f 'device/deviceibelight.cpp' || echo '$(srcdir)/'`device/deviceibelight.cpp

deviceibelight.obj: device/deviceibelight.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT deviceibelight.obj -MD -MP -MF $(DEPDIR)/deviceibelight.Tpo -c -o deviceibelight.obj `if test -f 'device/deviceibelight.cpp'; then $(CYGPATH_W) 'device/deviceibelight.cpp'; else $(CYGPATH_W) '$(srcdir)/device/deviceibelight.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/deviceibelight.Tpo $(DEPDIR)/deviceibelight.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='device/deviceibelight.cpp' object='deviceibelight.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o deviceibelight.obj `if test -f 'device/deviceibelight.cpp'; then $(CYGPATH_W) 'device/deviceibelight.cpp'; else $(CYGPATH_W) '$(srcdir)/device/deviceibelight.cpp'; fi`

devicelightpack.o: device/devicelightpack.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT devicelightpack.o -MD -MP -MF $(DEPDIR)/devicelightpack.Tpo -c -o devicelightpack.o `test -f 'device/devicelightpack.cpp' || echo '$(srcdir)/'`device/devicelightpack.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/devicelightpack.Tpo $(DEPDIR)/devicelightpack.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='device/devicelightpack.cpp' object='devicelightpack.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o devicelightpack.o `test -f 'device/devicelightpack.cpp' || echo '$(srcdir)/'`device/devicelightpack.cpp

devicelightpack.obj: device/devicelightpack.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT devicelightpack.obj -MD -MP -MF $(DEPDIR)/devicelightpack.Tpo -c -o devicelightpack.obj `if test -f 'device/devicelightpack.cpp'; then $(CYGPATH_W) 'device/devicelightpack.cpp'; else $(CYGPATH_W) '$(srcdir)/device/devicelightpack.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/devicelightpack.Tpo $(DEPDIR)/devicelightpack.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='device/devicelightpack.cpp' object='devicelightpack.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o devicelightpack.obj `if test -f 'device/devicelightpack.cpp'; then $(CYGPATH_W) 'device/devicelightpack.cpp'; else $(CYGPATH_W) '$(srcdir)/device/devicelightpack.cpp'; fi`

deviceola.o: device/deviceola.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT deviceola.o -MD -MP -MF $(DEPDIR)/deviceola.Tpo -c -o deviceola.o `test -f 'device/deviceola.cpp' || echo '$(srcdir)/'`device/deviceola.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/deviceola.Tpo $(DEPDIR)/deviceola.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='device/deviceola.cpp' object='deviceola.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o deviceola.o `test -f 'device/deviceola.cpp' || echo '$(srcdir)/'`device/deviceola.cpp

deviceola.obj: device/deviceola.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT deviceola.obj -MD -MP -MF $(DEPDIR)/deviceola.Tpo -c -o deviceola.obj `if test -f 'device/deviceola.cpp'; then $(CYGPATH_W) 'device/deviceola.cpp'; else $(CYGPATH_W) '$(srcdir)/device/deviceola.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/deviceola.Tpo $(DEPDIR)/deviceola.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='device/deviceola.cpp' object='deviceola.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o deviceola.obj `if test -f 'device/deviceola.cpp'; then $(CYGPATH_W) 'device/deviceola.cpp'; else $(CYGPATH_W) '$(srcdir)/device/deviceola.cpp'; fi`

devicespi.o: device/devicespi.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT devicespi.o -MD -MP -MF $(DEPDIR)/devicespi.Tpo -c -o devicespi.o `test -f 'device/devicespi.cpp' || echo '$(srcdir)/'`device/devicespi.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/devicespi.Tpo $(DEPDIR)/devicespi.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='device/devicespi.cpp' object='devicespi.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o devicespi.o `test -f 'device/devicespi.cpp' || echo '$(srcdir)/'`device/devicespi.cpp

devicespi.obj: device/devicespi.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT devicespi.obj -MD -MP -MF $(DEPDIR)/devicespi.Tpo -c -o devicespi.obj `if test -f 'device/devicespi.cpp'; then $(CYGPATH_W) 'device/devicespi.cpp'; else $(CYGPATH_W) '$(srcdir)/device/devicespi.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/devicespi.Tpo $(DEPDIR)/devicespi.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='device/devicespi.cpp' object='devicespi.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o devicespi.obj `if test -f 'device/devicespi.cpp'; then $(CYGPATH_W) 'device/devicespi.cpp'; else $(CYGPATH_W) '$(srcdir)/device/devicespi.cpp'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LTLIBRARIES) $(PROGRAMS)
install-binPROGRAMS: install-libLTLIBRARIES

installdirs:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-libLTLIBRARIES \
	clean-libtool mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS install-libLTLIBRARIES

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-libLTLIBRARIES

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-binPROGRAMS \
	clean-generic clean-libLTLIBRARIES clean-libtool ctags \
	distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-binPROGRAMS \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-info install-info-am install-libLTLIBRARIES \
	install-man install-pdf install-pdf-am install-ps \
	install-ps-am install-strip installcheck installcheck-am \
	installdirs maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool pdf pdf-am ps ps-am tags uninstall \
	uninstall-am uninstall-binPROGRAMS uninstall-libLTLIBRARIES


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
