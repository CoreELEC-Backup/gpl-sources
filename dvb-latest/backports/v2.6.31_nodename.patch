diff --git a/drivers/media/dvb-core/dvbdev.c b/drivers/media/dvb-core/dvbdev.c
index 401ef64..3683ae0 100644
--- a/drivers/media/dvb-core/dvbdev.c
+++ b/drivers/media/dvb-core/dvbdev.c
@@ -449,7 +449,7 @@ static int dvb_uevent(struct device *dev, struct kobj_uevent_env *env)
 	return 0;
 }
 
-static char *dvb_devnode(struct device *dev, mode_t *mode)
+static char *dvb_nodename(struct device *dev)
 {
 	struct dvb_device *dvbdev = dev_get_drvdata(dev);
 
@@ -480,7 +480,7 @@ static int __init init_dvbdev(void)
 		goto error;
 	}
 	dvb_class->dev_uevent = dvb_uevent;
-	dvb_class->devnode = dvb_devnode;
+	dvb_class->nodename = dvb_nodename;
 	return 0;
 
 error:
diff --git a/drivers/media/pci/ddbridge/ddbridge-core.c b/drivers/media/pci/ddbridge/ddbridge-core.c
index 36e3452..2565057 100644
--- a/drivers/media/pci/ddbridge/ddbridge-core.c
+++ b/drivers/media/pci/ddbridge/ddbridge-core.c
@@ -1479,7 +1479,7 @@ static const struct file_operations ddb_fops = {
 	.open           = ddb_open,
 };
 
-static char *ddb_devnode(struct device *device, mode_t *mode)
+static char *ddb_devnode(struct device *device)
 {
 	struct ddb *dev = dev_get_drvdata(device);
 
@@ -1499,7 +1499,7 @@ static int ddb_class_create(void)
 		unregister_chrdev(ddb_major, DDB_NAME);
 		return PTR_ERR(ddb_class);
 	}
-	ddb_class->devnode = ddb_devnode;
+	ddb_class->nodename = ddb_devnode;
 	return 0;
 }
 
diff --git a/drivers/media/rc/rc-main.c b/drivers/media/rc/rc-main.c
index f304792..c276faa 100644
--- a/drivers/media/rc/rc-main.c
+++ b/drivers/media/rc/rc-main.c
@@ -715,14 +715,14 @@ static void ir_close(struct input_dev *idev)
 }
 
 /* class for /sys/class/rc */
-static char *rc_devnode(struct device *dev, mode_t *mode)
+static char *rc_devnode(struct device *dev)
 {
 	return kasprintf(GFP_KERNEL, "rc/%s", dev_name(dev));
 }
 
 static struct class rc_class = {
 	.name		= "rc",
-	.devnode	= rc_devnode,
+	.nodename	= rc_devnode,
 };
 
 /*
