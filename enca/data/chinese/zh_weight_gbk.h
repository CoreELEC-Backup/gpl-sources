/* This header file is in the public domain.
   Most of its content is generated by gperf, with modifications
   Chinese frequency table courtesy of Dept. of CS, Tsinghua Univeristy, Beijing
   See http://fhpi.yingkou.net.cn/bbs/1951/messages/2903.html
*/

/* ANSI-C code produced by gperf version 3.0.1 */
/* Command-line: gperf -L ANSI-C -I -C -E -n -o -c -D -t zh_weight_gbk.txt  */
/* Computed positions: -k'1-2' */

#if !((' ' == 32) && ('!' == 33) && ('"' == 34) && ('#' == 35) \
      && ('%' == 37) && ('&' == 38) && ('\'' == 39) && ('(' == 40) \
      && (')' == 41) && ('*' == 42) && ('+' == 43) && (',' == 44) \
      && ('-' == 45) && ('.' == 46) && ('/' == 47) && ('0' == 48) \
      && ('1' == 49) && ('2' == 50) && ('3' == 51) && ('4' == 52) \
      && ('5' == 53) && ('6' == 54) && ('7' == 55) && ('8' == 56) \
      && ('9' == 57) && (':' == 58) && (';' == 59) && ('<' == 60) \
      && ('=' == 61) && ('>' == 62) && ('?' == 63) && ('A' == 65) \
      && ('B' == 66) && ('C' == 67) && ('D' == 68) && ('E' == 69) \
      && ('F' == 70) && ('G' == 71) && ('H' == 72) && ('I' == 73) \
      && ('J' == 74) && ('K' == 75) && ('L' == 76) && ('M' == 77) \
      && ('N' == 78) && ('O' == 79) && ('P' == 80) && ('Q' == 81) \
      && ('R' == 82) && ('S' == 83) && ('T' == 84) && ('U' == 85) \
      && ('V' == 86) && ('W' == 87) && ('X' == 88) && ('Y' == 89) \
      && ('Z' == 90) && ('[' == 91) && ('\\' == 92) && (']' == 93) \
      && ('^' == 94) && ('_' == 95) && ('a' == 97) && ('b' == 98) \
      && ('c' == 99) && ('d' == 100) && ('e' == 101) && ('f' == 102) \
      && ('g' == 103) && ('h' == 104) && ('i' == 105) && ('j' == 106) \
      && ('k' == 107) && ('l' == 108) && ('m' == 109) && ('n' == 110) \
      && ('o' == 111) && ('p' == 112) && ('q' == 113) && ('r' == 114) \
      && ('s' == 115) && ('t' == 116) && ('u' == 117) && ('v' == 118) \
      && ('w' == 119) && ('x' == 120) && ('y' == 121) && ('z' == 122) \
      && ('{' == 123) && ('|' == 124) && ('}' == 125) && ('~' == 126))
/* The character set is not based on ISO-646.  */
#error "gperf generated tables don't work with this execution character set. Please report a bug to <bug-gnu-gperf@gnu.org>."
#endif

/* maximum key range = 1014, duplicates = 0 */

#ifdef __GNUC__
__inline
#else
#ifdef __cplusplus
inline
#endif
#endif
/*ARGSUSED*/
static unsigned int
hash_gbk (register const unsigned char *str)
{
  static const unsigned short asso_values[] =
    {
      1014, 1014, 1014, 1014, 1014, 1014, 1014, 1014, 1014, 1014,
      1014, 1014, 1014, 1014, 1014, 1014, 1014, 1014, 1014, 1014,
      1014, 1014, 1014, 1014, 1014, 1014, 1014, 1014, 1014, 1014,
      1014, 1014, 1014, 1014, 1014, 1014, 1014, 1014, 1014, 1014,
      1014, 1014, 1014, 1014, 1014, 1014, 1014, 1014, 1014, 1014,
      1014, 1014, 1014, 1014, 1014, 1014, 1014, 1014, 1014, 1014,
      1014, 1014, 1014, 1014, 1014, 1014, 1014, 1014, 1014, 1014,
      1014, 1014, 1014, 1014, 1014, 1014, 1014, 1014, 1014, 1014,
      1014, 1014, 1014, 1014, 1014, 1014, 1014, 1014, 1014, 1014,
      1014, 1014, 1014, 1014, 1014, 1014, 1014, 1014, 1014, 1014,
      1014, 1014, 1014, 1014, 1014, 1014, 1014, 1014, 1014, 1014,
      1014, 1014, 1014, 1014, 1014, 1014, 1014, 1014, 1014, 1014,
      1014, 1014, 1014, 1014, 1014, 1014, 1014, 1014, 1014, 1014,
      1014, 1014, 1014, 1014, 1014, 1014, 1014, 1014, 1014, 1014,
      1014, 1014, 1014, 1014, 1014, 1014, 1014, 1014, 1014, 1014,
      1014, 1014, 1014, 1014, 1014, 1014, 1014, 1014, 1014, 1014,
      1014, 1014, 1014, 1014, 1014, 1014, 1014, 1014, 1014, 1014,
      1014, 1014, 1014, 1014, 1014, 1014, 1014, 1014, 1014, 1014,
      1014, 1014, 1014,  340,  218,  345,   88,  505,  245,    8,
        63,  310,  325,  225,   40,   18,  410,  500,  510,  455,
       280,  400,  375,  255,  371,  480,  510,   60,   85,    5,
       450,  108,  160,   95,   35,   45,  365,    0,   55,  165,
        90,   10,   25,  103,   41,   24,  336,  465,    1,  401,
       176,   16,  186,  486,  475,  340,  270,  481,  400,  511,
       511,   66,   76,   81,  145,  463,  390,  431,  273,  306,
       263,  113,  438,   31,  278,  285,  411,   30,   13,    4,
         9,  158,    3,   48,  483,  415,  291,  246,  220,   85,
       263,  336,  131,  183,  455,   86,  116,  151,  218,  143,
        81,  505,  381,  455,  261,  358,  508,  460,  138,  225,
       233, 1014,  391,   78,    3,  130,   56,  490,   43,  343,
       155,   46, 1014
    };
  return asso_values[(unsigned char)str[1]+47] + asso_values[(unsigned char)str[0]+7];
}

static const struct zh_weight *in_gbk (register const unsigned char *str)
{
  enum
    {
      TOTAL_KEYWORDS = 500,
      MIN_WORD_LENGTH = 2,
      MAX_WORD_LENGTH = 2,
      MIN_HASH_VALUE = 0,
      MAX_HASH_VALUE = 1013
    };

  static const struct zh_weight wordlist[] =
    {
      {"\322\252",0.0045003},
      {"\322\265",0.0065423},
      {"\322\327",0.0006749},
      {"\322\324",0.0038364},
      {"\312\265",0.002744},
      {"\312\327",0.0006626},
      {"\322\325",0.0004998},
      {"\326\252",0.0006257},
      {"\326\265",0.0006514},
      {"\266\324",0.0032427},
      {"\326\367",0.0027957},
      {"\312\325",0.0012488},
      {"\312\256",0.0016297},
      {"\312\323",0.000674},
      {"\326\256",0.001919},
      {"\266\323",0.0009591},
      {"\322\262",0.001974},
      {"\327\252",0.0007108},
      {"\326\270",0.0007731},
      {"\327\367",0.0040521},
      {"\327\324",0.0022824},
      {"\312\257",0.0004908},
      {"\274\323",0.0023829},
      {"\266\257",0.0023694},
      {"\274\270",0.0008733},
      {"\326\257",0.0007599},
      {"\317\265",0.0013262},
      {"\327\323",0.0015414},
      {"\273\252",0.0012136},
      {"\326\316",0.0009927},
      {"\274\257",0.0010417},
      {"\326\247",0.0007224},
      {"\312\261",0.0030057},
      {"\274\322",0.0039648},
      {"\320\324",0.0011996},
      {"\273\256",0.0007059},
      {"\326\261",0.0005522},
      {"\266\250",0.0024269},
      {"\266\376",0.001247},
      {"\323\252",0.0011203},
      {"\326\330",0.0023459},
      {"\317\257",0.0004695},
      {"\274\373",0.0007272},
      {"\266\253",0.0011892},
      {"\274\376",0.0009711},
      {"\273\257",0.0023838},
      {"\267\242",0.0053412},
      {"\310\325",0.0036327},
      {"\327\250",0.0009373},
      {"\312\302",0.0018604},
      {"\274\253",0.0006288},
      {"\273\247",0.0005598},
      {"\320\316",0.0009425},
      {"\317\373",0.0006543},
      {"\320\247",0.0009217},
      {"\322\351",0.0011071},
      {"\317\330",0.0009752},
      {"\273\250",0.0005451},
      {"\312\351",0.001001},
      {"\273\330",0.0006653},
      {"\263\265",0.0010894},
      {"\312\241",0.0016366},
      {"\310\316",0.0012122},
      {"\274\303",0.0026701},
      {"\316\252",0.0054216},
      {"\273\371",0.0014197},
      {"\316\367",0.0012152},
      {"\312\246",0.00052},
      {"\317\302",0.0021357},
      {"\327\366",0.0007036},
      {"\274\344",0.0010701},
      {"\310\250",0.0009164},
      {"\327\351",0.0011894},
      {"\267\250",0.0025935},
      {"\267\376",0.0008639},
      {"\327\241",0.000485},
      {"\320\302",0.002897},
      {"\326\260",0.000867},
      {"\310\253",0.0032345},
      {"\322\345",0.0011046},
      {"\326\244",0.0007621},
      {"\316\257",0.001456},
      {"\274\260",0.0012255},
      {"\263\247",0.0012368},
      {"\314\270",0.0006043},
      {"\316\322",0.0034646},
      {"\320\304",0.0014967},
      {"\327\260",0.000643},
      {"\320\241",0.0016135},
      {"\323\303",0.002668},
      {"\325\373",0.0006271},
      {"\320\255",0.0007439},
      {"\325\376",0.002679},
      {"\266\370",0.0018881},
      {"\311\253",0.0005973},
      {"\327\345",0.0005358},
      {"\273\260",0.000621},
      {"\310\241",0.0009919},
      {"\325\371",0.0007016},
      {"\273\244",0.0005659},
      {"\274\341",0.0004694},
      {"\323\246",0.0014049},
      {"\322\346",0.0008483},
      {"\314\250",0.0008597},
      {"\322\375",0.0006632},
      {"\314\330",0.0012592},
      {"\323\260",0.000514},
      {"\312\375",0.0008388},
      {"\312\326",0.0009187},
      {"\324\252",0.002067},
      {"\263\366",0.0042527},
      {"\326\326",0.0018411},
      {"\327\305",0.0014365},
      {"\273\341",0.0051579},
      {"\263\241",0.0030636},
      {"\320\370",0.0005217},
      {"\316\304",0.0018717},
      {"\273\361",0.0004915},
      {"\316\336",0.0010303},
      {"\312\267",0.0004954},
      {"\322\342",0.0011669},
      {"\327\245",0.0004875},
      {"\320\350",0.0007022},
      {"\320\305",0.000977},
      {"\312\271",0.001449},
      {"\317\326",0.0025147},
      {"\273\375",0.0006935},
      {"\263\244",0.0025652},
      {"\311\314",0.0016298},
      {"\323\305",0.0008197},
      {"\263\314",0.0012378},
      {"\315\373",0.0005027},
      {"\315\250",0.0015692},
      {"\324\261",0.0018995},
      {"\267\305",0.0010846},
      {"\323\375",0.0009705},
      {"\316\345",0.0007467},
      {"\323\326",0.0009509},
      {"\310\375",0.0017945},
      {"\273\267",0.0006218},
      {"\310\245",0.0013444},
      {"\267\326",0.002317},
      {"\311\361",0.0005762},
      {"\314\345",0.0021551},
      {"\322\362",0.0010577},
      {"\273\271",0.0014906},
      {"\311\350",0.0022181},
      {"\326\335",0.000633},
      {"\324\302",0.0024389},
      {"\316\361",0.0018869},
      {"\261\270",0.0006344},
      {"\325\305",0.0007204},
      {"\310\267",0.0006259},
      {"\272\323",0.0005451},
      {"\314\341",0.0016334},
      {"\316\305",0.0004727},
      {"\325\346",0.0006076},
      {"\324\366",0.0014225},
      {"\325\375",0.0013077},
      {"\263\326",0.0010342},
      {"\265\367",0.0012018},
      {"\312\334",0.0008222},
      {"\317\347",0.0007924},
      {"\324\255",0.0009897},
      {"\272\316",0.0005162},
      {"\261\261",0.0015279},
      {"\317\362",0.0014073},
      {"\261\250",0.0027135},
      {"\273\362",0.0006972},
      {"\261\330",0.0006812},
      {"\317\363",0.0004946},
      {"\322\275",0.0005415},
      {"\327\334",0.0018397},
      {"\325\342",0.0043446},
      {"\312\275",0.0008493},
      {"\325\271",0.0030534},
      {"\310\347",0.0012367},
      {"\301\252",0.0009379},
      {"\267\347",0.0007326},
      {"\301\367",0.0008055},
      {"\301\242",0.0015778},
      {"\265\261",0.001657},
      {"\327\337",0.0006468},
      {"\312\320",0.0046659},
      {"\314\342",0.0013688},
      {"\265\330",0.0047688},
      {"\326\320",0.0076843},
      {"\312\333",0.0004988},
      {"\317\337",0.0005442},
      {"\265\253",0.0010253},
      {"\272\303",0.0017451},
      {"\311\347",0.0020607},
      {"\261\344",0.0007406},
      {"\315\305",0.0009523},
      {"\320\355",0.0005616},
      {"\320\313",0.0005636},
      {"\274\333",0.0010855},
      {"\265\302",0.0005846},
      {"\270\367",0.001779},
      {"\325\362",0.000663},
      {"\326\312",0.0009775},
      {"\270\256",0.0009796},
      {"\265\303",0.0019729},
      {"\310\313",0.0080773},
      {"\274\312",0.0012275},
      {"\315\254",0.0026107},
      {"\265\304",0.0341277},
      {"\323\311",0.0013801},
      {"\320\320",0.0041784},
      {"\327\312",0.0027448},
      {"\267\275",0.002853},
      {"\315\267",0.0007873},
      {"\310\317",0.0008819},
      {"\323\320",0.0077624},
      {"\312\263",0.0004878},
      {"\315\342",0.0022498},
      {"\266\340",0.0032382},
      {"\312\274",0.0004855},
      {"\311\355",0.0006168},
      {"\266\274",0.0014503},
      {"\271\262",0.0010536},
      {"\262\242",0.0012383},
      {"\270\261",0.0006302},
      {"\325\337",0.0022472},
      {"\311\275",0.0011044},
      {"\260\270",0.0005503},
      {"\274\274",0.0016091},
      {"\325\275",0.0008112},
      {"\263\311",0.0037219},
      {"\311\317",0.0048331},
      {"\260\262",0.00114},
      {"\327\274",0.0007058},
      {"\270\371",0.000545},
      {"\271\373",0.0008799},
      {"\312\251",0.0009187},
      {"\317\340",0.0010087},
      {"\271\330",0.0023261},
      {"\301\246",0.0022943},
      {"\262\316",0.0006661},
      {"\303\367",0.0014369},
      {"\271\253",0.0031331},
      {"\305\256",0.0006045},
      {"\327\356",0.0012694},
      {"\315\362",0.0020929},
      {"\270\303",0.0006501},
      {"\270\366",0.0043881},
      {"\324\362",0.0005586},
      {"\270\304",0.0018059},
      {"\317\356",0.0011181},
      {"\312\307",0.0076122},
      {"\312\365",0.0014501},
      {"\273\356",0.0011783},
      {"\321\247",0.0027139},
      {"\316\312",0.0015404},
      {"\310\374",0.0004837},
      {"\265\245",0.0008341},
      {"\312\266",0.0005749},
      {"\274\307",0.0013592},
      {"\320\251",0.0013308},
      {"\322\321",0.0015716},
      {"\322\332",0.000824},
      {"\317\353",0.0008423},
      {"\303\373",0.0014078},
      {"\274\266",0.0009423},
      {"\271\246",0.0005073},
      {"\321\371",0.0008296},
      {"\275\323",0.0007936},
      {"\326\332",0.0006362},
      {"\262\351",0.000721},
      {"\324\313",0.0009758},
      {"\325\274",0.0005246},
      {"\273\365",0.0005011},
      {"\271\244",0.0050114},
      {"\324\275",0.0004797},
      {"\323\353",0.0019506},
      {"\301\326",0.0007135},
      {"\266\310",0.0015281},
      {"\270\370",0.0007847},
      {"\310\353",0.0015621},
      {"\311\356",0.0008945},
      {"\301\254",0.0004976},
      {"\321\351",0.0005062},
      {"\270\361",0.0008735},
      {"\321\241",0.0006163},
      {"\313\265",0.0019478},
      {"\267\307",0.000531},
      {"\275\250",0.0032052},
      {"\274\315",0.0004974},
      {"\272\363",0.0021836},
      {"\313\256",0.0016446},
      {"\270\346",0.0005829},
      {"\265\347",0.001873},
      {"\275\253",0.0014281},
      {"\317\310",0.0010976},
      {"\312\306",0.0006866},
      {"\323\332",0.0026086},
      {"\272\334",0.000797},
      {"\326\306",0.0026895},
      {"\267\321",0.0009271},
      {"\322\273",0.0112731},
      {"\271\346",0.0013724},
      {"\263\307",0.0010251},
      {"\261\355",0.0013294},
      {"\271\375",0.0020606},
      {"\274\306",0.00135},
      {"\320\315",0.0006771},
      {"\326\273",0.0008284},
      {"\312\276",0.0004949},
      {"\275\366",0.0005794},
      {"\262\305",0.0006942},
      {"\326\276",0.0008129},
      {"\313\373",0.0031435},
      {"\321\370",0.0004942},
      {"\315\263",0.0011475},
      {"\300\373",0.0018856},
      {"\314\365",0.0012831},
      {"\275\255",0.0009106},
      {"\304\334",0.0022237},
      {"\272\317",0.0023691},
      {"\274\272",0.0006239},
      {"\324\274",0.000501},
      {"\313\371",0.0015791},
      {"\271\342",0.0005461},
      {"\277\252",0.0031058},
      {"\271\271",0.0007005},
      {"\303\361",0.0035945},
      {"\265\275",0.0036926},
      {"\312\300",0.0010821},
      {"\264\323",0.001703},
      {"\303\305",0.0014059},
      {"\326\301",0.0007778},
      {"\275\314",0.0013183},
      {"\317\372",0.0008187},
      {"\303\346",0.0020167},
      {"\267\264",0.0006176},
      {"\273\372",0.0023189},
      {"\313\304",0.0009759},
      {"\304\317",0.00114},
      {"\310\273",0.001088},
      {"\264\316",0.0014362},
      {"\263\243",0.0008196},
      {"\275\370",0.0032419},
      {"\275\341",0.0011242},
      {"\301\313",0.0079237},
      {"\300\255",0.0005527},
      {"\310\272",0.0005419},
      {"\275\361",0.0013712},
      {"\301\275",0.0013376},
      {"\315\365",0.0006086},
      {"\313\260",0.0007012},
      {"\276\253",0.0007159},
      {"\301\317",0.0005776},
      {"\264\253",0.0007021},
      {"\315\266",0.0011592},
      {"\314\354",0.0016483},
      {"\301\320",0.0005658},
      {"\306\344",0.0017313},
      {"\311\331",0.0009361},
      {"\316\273",0.0016007},
      {"\271\334",0.001622},
      {"\270\337",0.0025748},
      {"\311\372",0.0039844},
      {"\302\267",0.001188},
      {"\276\366",0.0011549},
      {"\324\332",0.0082045},
      {"\265\263",0.0011413},
      {"\270\311",0.0009596},
      {"\265\274",0.0011932},
      {"\277\366",0.0005979},
      {"\276\255",0.0049223},
      {"\307\351",0.0011166},
      {"\275\342",0.0011085},
      {"\270\320",0.0005274},
      {"\271\311",0.0005495},
      {"\264\246",0.0009814},
      {"\270\333",0.0005587},
      {"\316\357",0.0010483},
      {"\313\375",0.0005373},
      {"\262\337",0.0006082},
      {"\306\370",0.0005779},
      {"\307\260",0.0020531},
      {"\262\275",0.0010507},
      {"\271\333",0.0007736},
      {"\262\311",0.0006097},
      {"\324\354",0.0009483},
      {"\264\345",0.0009976},
      {"\315\306",0.0006574},
      {"\324\360",0.0006355},
      {"\307\345",0.0005405},
      {"\275\347",0.0010474},
      {"\324\264",0.0005666},
      {"\264\370",0.0006134},
      {"\313\271",0.0006023},
      {"\307\370",0.0022413},
      {"\321\317",0.0006039},
      {"\304\307",0.0007224},
      {"\324\331",0.0005426},
      {"\261\310",0.001161},
      {"\321\320",0.0009783},
      {"\324\272",0.0010515},
      {"\270\374",0.0008908},
      {"\304\277",0.0015919},
      {"\306\267",0.0023513},
      {"\276\326",0.0009665},
      {"\265\332",0.0017413},
      {"\302\355",0.0005587},
      {"\272\315",0.0067636},
      {"\315\352",0.0006563},
      {"\304\321",0.0007756},
      {"\261\243",0.0014976},
      {"\304\332",0.0016149},
      {"\315\301",0.0005437},
      {"\302\311",0.0005375},
      {"\272\243",0.0015815},
      {"\265\310",0.0021605},
      {"\261\360",0.0007577},
      {"\301\277",0.0015425},
      {"\260\374",0.0006314},
      {"\262\274",0.0005445},
      {"\275\317",0.0005458},
      {"\271\251",0.000632},
      {"\302\333",0.0007584},
      {"\261\273",0.000825},
      {"\261\276",0.0024993},
      {"\265\343",0.0013538},
      {"\304\243",0.0004864},
      {"\302\312",0.0005754},
      {"\303\263",0.0006242},
      {"\306\363",0.0027556},
      {"\300\355",0.0029849},
      {"\276\335",0.0009205},
      {"\261\352",0.0009393},
      {"\264\362",0.0005953},
      {"\300\317",0.0008237},
      {"\301\354",0.0011289},
      {"\305\251",0.001983},
      {"\264\363",0.0066078},
      {"\307\363",0.0009944},
      {"\262\277",0.0033026},
      {"\321\353",0.0004698},
      {"\306\275",0.0016647},
      {"\260\321",0.0010343},
      {"\275\374",0.0009063},
      {"\321\307",0.0006162},
      {"\265\300",0.0012275},
      {"\304\352",0.0071346},
      {"\276\337",0.0006981},
      {"\303\307",0.0030767},
      {"\321\266",0.000496},
      {"\264\313",0.0011388},
      {"\277\313",0.0005433},
      {"\303\277",0.000715},
      {"\271\343",0.0011772},
      {"\277\311",0.0018478},
      {"\270\273",0.0004872},
      {"\313\274",0.0006569},
      {"\300\340",0.0005014},
      {"\313\374",0.0005788},
      {"\260\354",0.0013224},
      {"\270\272",0.0005072},
      {"\260\264",0.0004965},
      {"\262\306",0.0005022},
      {"\300\356",0.0006669},
      {"\271\372",0.0106651},
      {"\270\357",0.0012506},
      {"\262\273",0.0063303},
      {"\260\331",0.0006978},
      {"\275\332",0.000558},
      {"\262\372",0.0043545},
      {"\276\263",0.0005699},
      {"\303\264",0.0006158},
      {"\276\374",0.0009727},
      {"\307\340",0.0005662},
      {"\303\273",0.0008714},
      {"\305\372",0.0007277},
      {"\276\251",0.0012137},
      {"\277\356",0.0005576},
      {"\275\360",0.001743},
      {"\275\273",0.0011534},
      {"\303\300",0.0013899},
      {"\300\315",0.0005726},
      {"\306\332",0.0012406},
      {"\276\277",0.0007264},
      {"\307\277",0.0013442},
      {"\300\264",0.0034731},
      {"\277\332",0.0012146},
      {"\313\276",0.0017401},
      {"\313\331",0.0005376},
      {"\276\315",0.0021619},
      {"\306\360",0.0015911},
      {"\300\372",0.0005352},
      {"\277\315",0.0004833},
      {"\300\357",0.0014032},
      {"\277\354",0.0006737},
      {"\264\264",0.0007723},
      {"\277\306",0.0014751},
      {"\277\264",0.0008716},
      {"\276\331",0.0006836},
      {"\264\372",0.0016641},
      {"\264\357",0.0012618}
    };

  static const short lookup[] =
    {
        0,   1,  -1,   2,   3,  -1,   4,  -1,   5,   6,
        7,   8,   9,  10,  11,  12,  -1,  -1,  13,  -1,
       14,  15,  -1,  -1,  16,  17,  18,  -1,  19,  20,
       21,  22,  -1,  23,  24,  25,  26,  -1,  27,  -1,
       28,  29,  -1,  30,  -1,  31,  32,  -1,  33,  34,
       35,  36,  -1,  37,  38,  39,  -1,  -1,  40,  -1,
       41,  42,  -1,  43,  44,  45,  -1,  -1,  46,  47,
       48,  49,  -1,  50,  -1,  51,  52,  -1,  53,  -1,
       54,  55,  -1,  56,  -1,  57,  58,  -1,  59,  60,
       61,  62,  -1,  -1,  63,  64,  65,  -1,  66,  -1,
       67,  68,  -1,  69,  70,  71,  72,  -1,  73,  74,
       75,  76,  -1,  77,  -1,  78,  79,  -1,  80,  -1,
       81,  82,  -1,  83,  84,  85,  86,  -1,  87,  -1,
       88,  89,  -1,  90,  -1,  91,  92,  -1,  93,  -1,
       94,  95,  -1,  96,  -1,  97,  98,  -1,  99, 100,
      101, 102,  -1, 103,  -1, 104, 105,  -1, 106,  -1,
      107,  -1,  -1, 108,  -1, 109, 110,  -1, 111,  -1,
      112, 113,  -1, 114,  -1, 115, 116,  -1, 117,  -1,
      118, 119,  -1, 120,  -1, 121,  -1,  -1, 122,  -1,
      123, 124,  -1, 125,  -1, 126, 127,  -1, 128,  -1,
      129, 130,  -1, 131,  -1, 132, 133,  -1, 134,  -1,
      135, 136,  -1, 137,  -1, 138, 139,  -1,  -1,  -1,
      140, 141,  -1, 142, 143, 144, 145,  -1, 146,  -1,
      147, 148,  -1, 149, 150, 151, 152,  -1, 153, 154,
      155, 156,  -1, 157,  -1, 158, 159,  -1, 160,  -1,
       -1, 161,  -1, 162,  -1, 163, 164,  -1,  -1, 165,
      166,  -1,  -1, 167,  -1, 168, 169,  -1, 170,  -1,
      171, 172,  -1, 173,  -1, 174, 175,  -1, 176,  -1,
      177, 178,  -1, 179,  -1, 180, 181,  -1, 182,  -1,
      183, 184,  -1, 185,  -1, 186, 187,  -1, 188,  -1,
      189, 190,  -1, 191, 192, 193, 194,  -1, 195, 196,
       -1, 197,  -1, 198,  -1, 199, 200,  -1,  -1,  -1,
      201, 202,  -1, 203, 204, 205, 206,  -1, 207,  -1,
      208, 209,  -1, 210,  -1,  -1, 211,  -1, 212,  -1,
      213, 214,  -1, 215, 216, 217, 218,  -1, 219, 220,
      221, 222,  -1, 223,  -1, 224, 225,  -1, 226,  -1,
      227, 228,  -1, 229, 230, 231, 232,  -1, 233,  -1,
      234, 235,  -1, 236,  -1, 237, 238,  -1, 239,  -1,
      240, 241,  -1, 242,  -1, 243, 244,  -1, 245,  -1,
      246, 247,  -1, 248,  -1, 249, 250,  -1, 251,  -1,
      252, 253,  -1, 254,  -1, 255, 256,  -1, 257,  -1,
      258, 259,  -1,  -1,  -1, 260, 261,  -1, 262, 263,
      264, 265,  -1, 266,  -1, 267, 268,  -1, 269,  -1,
      270, 271,  -1, 272,  -1, 273, 274,  -1, 275, 276,
      277, 278,  -1, 279,  -1, 280, 281,  -1, 282,  -1,
      283, 284,  -1, 285,  -1, 286, 287,  -1, 288,  -1,
      289, 290,  -1, 291,  -1, 292, 293,  -1, 294,  -1,
      295, 296,  -1, 297, 298, 299, 300,  -1, 301, 302,
      303, 304,  -1, 305,  -1, 306, 307,  -1, 308,  -1,
      309, 310,  -1, 311,  -1, 312, 313,  -1, 314, 315,
      316, 317,  -1, 318, 319, 320, 321,  -1, 322,  -1,
      323, 324,  -1, 325,  -1, 326, 327,  -1, 328,  -1,
      329, 330,  -1, 331,  -1, 332, 333,  -1, 334,  -1,
      335, 336,  -1, 337,  -1, 338, 339,  -1, 340,  -1,
      341, 342,  -1, 343,  -1, 344, 345,  -1, 346,  -1,
      347, 348,  -1, 349,  -1, 350,  -1,  -1, 351,  -1,
      352, 353,  -1, 354,  -1, 355, 356,  -1, 357,  -1,
      358, 359,  -1, 360,  -1, 361, 362,  -1, 363,  -1,
      364, 365,  -1, 366,  -1, 367,  -1,  -1, 368,  -1,
      369, 370,  -1, 371,  -1, 372,  -1,  -1, 373,  -1,
      374, 375,  -1, 376,  -1, 377,  -1,  -1, 378,  -1,
      379,  -1,  -1, 380,  -1, 381, 382,  -1, 383,  -1,
      384, 385,  -1, 386,  -1, 387, 388,  -1, 389,  -1,
      390,  -1,  -1,  -1,  -1, 391, 392,  -1,  -1,  -1,
      393,  -1,  -1, 394,  -1, 395,  -1,  -1, 396, 397,
      398, 399,  -1, 400,  -1, 401, 402,  -1, 403,  -1,
      404, 405,  -1, 406,  -1, 407, 408,  -1, 409,  -1,
      410, 411,  -1, 412,  -1, 413, 414,  -1, 415,  -1,
      416,  -1,  -1, 417,  -1, 418,  -1,  -1, 419,  -1,
      420, 421,  -1, 422,  -1,  -1,  -1,  -1,  -1, 423,
      424,  -1,  -1,  -1,  -1, 425, 426,  -1,  -1,  -1,
       -1, 427,  -1, 428,  -1,  -1, 429,  -1,  -1,  -1,
      430,  -1,  -1, 431,  -1,  -1,  -1,  -1,  -1,  -1,
      432,  -1,  -1, 433,  -1, 434, 435,  -1, 436,  -1,
       -1,  -1,  -1, 437,  -1, 438, 439,  -1,  -1,  -1,
      440, 441,  -1, 442,  -1, 443, 444,  -1,  -1,  -1,
      445,  -1,  -1, 446,  -1, 447, 448,  -1, 449,  -1,
       -1,  -1,  -1, 450,  -1, 451,  -1,  -1,  -1,  -1,
      452,  -1,  -1, 453,  -1, 454,  -1,  -1,  -1,  -1,
      455, 456,  -1, 457,  -1, 458, 459,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1, 460,  -1,  -1, 461,  -1,
       -1,  -1,  -1, 462,  -1, 463,  -1,  -1, 464,  -1,
      465,  -1,  -1, 466,  -1, 467,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1, 468, 469,  -1,  -1,  -1,
      470,  -1,  -1, 471,  -1,  -1, 472,  -1,  -1,  -1,
      473,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1, 474,  -1,  -1,  -1, 475,  -1,  -1, 476,  -1,
      477,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1, 478, 479,  -1,  -1,  -1,
       -1,  -1,  -1, 480,  -1, 481,  -1,  -1,  -1,  -1,
      482,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
      483,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
      484,  -1,  -1,  -1,  -1, 485,  -1,  -1,  -1,  -1,
       -1, 486,  -1, 487,  -1,  -1,  -1,  -1, 488,  -1,
      489,  -1,  -1,  -1,  -1, 490,  -1,  -1, 491,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1, 492,  -1, 493,  -1,  -1,  -1,  -1,
      494,  -1,  -1, 495,  -1, 496,  -1,  -1,  -1,  -1,
       -1,  -1,  -1, 497,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1, 498,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1, 499
    };

    register int key = hash_gbk (str);

    if (key <= MAX_HASH_VALUE && key >= 0)
    {
        register int index = lookup[key];

        if (index >= 0)
        {
            register const unsigned char *s = wordlist[index].name;

            if (*str == *s && str[1] == s[1])
                return &wordlist[index];
        }
    }
    return 0;
}

/**
 * is_gbk:
 * @str: Pointer to a 16-bit wide character.
 *
 * Dosen't support GB18030 quadbyte (32-bit) characters yet
 *
 * Returns: One if the wide character is within GBK charset range, zero otherwise
 **/

static int is_gbk(const unsigned char *str)
{
  unsigned char high = str[0];
  unsigned char low = str[1];

  return high >=0x81 && high <= 0xfe
    && low >= 0x40 && low <= 0xfe && low != 0x7f;
}
