## DO NOT EDIT! GENERATED AUTOMATICALLY!
## Process this file with automake to produce Makefile.in.
# Copyright (C) 2002-2019 Free Software Foundation, Inc.
#
# This file is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This file is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this file.  If not, see <https://www.gnu.org/licenses/>.
#
# As a special exception to the GNU General Public License,
# this file may be distributed as part of a program that
# contains a configuration script generated by Autoconf, under
# the same distribution terms as the rest of that program.
#
# Generated by gnulib-tool.
# Reproduce by:
# gnulib-tool --import --local-dir=unistring/override \
#  --lib=libunistring \
#  --source-base=unistring \
#  --m4-base=unistring/m4 \
#  --doc-base=doc \
#  --tests-base=tests \
#  --aux-dir=build-aux \
#  --lgpl=3orGPLv2 \
#  --no-conditional-dependencies \
#  --libtool \
#  --macro-prefix=unistring \
#  --avoid=posix-malloc \
#  libunistring \
#  localcharset \
#  uniconv/u8-strconv-from-locale \
#  uniconv/u8-strconv-to-locale \
#  unictype/bidiclass-of \
#  unictype/category-M \
#  unictype/category-test \
#  unictype/joiningtype-of \
#  unictype/scripts \
#  uninorm/base \
#  uninorm/nfc \
#  uninorm/u32-normalize \
#  unistr/u32-cpy-alloc \
#  unistr/u32-strlen \
#  unistr/u32-to-u8 \
#  unistr/u8-to-u32

AUTOMAKE_OPTIONS = 1.11 gnits subdir-objects

SUBDIRS =
noinst_HEADERS =
noinst_LIBRARIES =
noinst_LTLIBRARIES =
EXTRA_DIST =
BUILT_SOURCES =
SUFFIXES =
MOSTLYCLEANFILES = core *.stackdump
MOSTLYCLEANDIRS =
CLEANFILES =
DISTCLEANFILES =
MAINTAINERCLEANFILES =
# No GNU Make output.
EXTRA_DIST += m4/gnulib-cache.m4

AM_CPPFLAGS =
AM_CFLAGS =

noinst_LTLIBRARIES += libunistring.la

libunistring_la_SOURCES =
libunistring_la_LIBADD = $(unistring_LTLIBOBJS)
libunistring_la_DEPENDENCIES = $(unistring_LTLIBOBJS)
EXTRA_libunistring_la_SOURCES =
libunistring_la_LDFLAGS = $(AM_LDFLAGS)
libunistring_la_LDFLAGS += -no-undefined
libunistring_la_LDFLAGS += $(LTLIBICONV)
libunistring_la_LDFLAGS += $(LTLIBUNISTRING)

## begin gnulib module absolute-header

# Use this preprocessor expression to decide whether #include_next works.
# Do not rely on a 'configure'-time test for this, since the expression
# might appear in an installed header, which is used by some other compiler.
HAVE_INCLUDE_NEXT = (__GNUC__ || 60000000 <= __DECC_VER)

## end   gnulib module absolute-header

## begin gnulib module alloca-opt

BUILT_SOURCES += $(ALLOCA_H)

# We need the following in order to create <alloca.h> when the system
# doesn't have one that works with the given compiler.
if GL_GENERATE_ALLOCA_H
alloca.h: alloca.in.h $(top_builddir)/config.status
	$(AM_V_GEN)rm -f $@-t $@ && \
	{ echo '/* DO NOT EDIT! GENERATED AUTOMATICALLY! */'; \
	  sed -e 's|@''HAVE_ALLOCA_H''@|$(HAVE_ALLOCA_H)|g' < $(srcdir)/alloca.in.h; \
	} > $@-t && \
	mv -f $@-t $@
else
alloca.h: $(top_builddir)/config.status
	rm -f $@
endif
MOSTLYCLEANFILES += alloca.h alloca.h-t

EXTRA_DIST += alloca.in.h

## end   gnulib module alloca-opt

## begin gnulib module array-mergesort


EXTRA_DIST += array-mergesort.h

## end   gnulib module array-mergesort

## begin gnulib module c-ctype

libunistring_la_SOURCES += c-ctype.h c-ctype.c

## end   gnulib module c-ctype

## begin gnulib module c-strcase

libunistring_la_SOURCES += c-strcase.h c-strcasecmp.c c-strncasecmp.c

## end   gnulib module c-strcase

## begin gnulib module c-strcaseeq


EXTRA_DIST += c-strcaseeq.h

## end   gnulib module c-strcaseeq

## begin gnulib module gperf

GPERF = gperf
V_GPERF = $(V_GPERF_@AM_V@)
V_GPERF_ = $(V_GPERF_@AM_DEFAULT_V@)
V_GPERF_0 = @echo "  GPERF   " $@;

## end   gnulib module gperf

## begin gnulib module havelib


EXTRA_DIST += $(top_srcdir)/build-aux/config.rpath

## end   gnulib module havelib

## begin gnulib module iconv-h

BUILT_SOURCES += $(ICONV_H)

# We need the following in order to create <iconv.h> when the system
# doesn't have one that works with the given compiler.
if GL_GENERATE_ICONV_H
iconv.h: iconv.in.h $(top_builddir)/config.status $(CXXDEFS_H) $(ARG_NONNULL_H) $(WARN_ON_USE_H)
	$(AM_V_GEN)rm -f $@-t $@ && \
	{ echo '/* DO NOT EDIT! GENERATED AUTOMATICALLY! */' && \
	  sed -e 's|@''GUARD_PREFIX''@|GL_UNISTRING|g' \
	      -e 's|@''INCLUDE_NEXT''@|$(INCLUDE_NEXT)|g' \
	      -e 's|@''PRAGMA_SYSTEM_HEADER''@|@PRAGMA_SYSTEM_HEADER@|g' \
	      -e 's|@''PRAGMA_COLUMNS''@|@PRAGMA_COLUMNS@|g' \
	      -e 's|@''NEXT_ICONV_H''@|$(NEXT_ICONV_H)|g' \
	      -e 's/@''GNULIB_ICONV''@/$(GNULIB_ICONV)/g' \
	      -e 's|@''ICONV_CONST''@|$(ICONV_CONST)|g' \
	      -e 's|@''REPLACE_ICONV''@|$(REPLACE_ICONV)|g' \
	      -e 's|@''REPLACE_ICONV_OPEN''@|$(REPLACE_ICONV_OPEN)|g' \
	      -e 's|@''REPLACE_ICONV_UTF''@|$(REPLACE_ICONV_UTF)|g' \
	      -e '/definitions of _GL_FUNCDECL_RPL/r $(CXXDEFS_H)' \
	      -e '/definition of _GL_ARG_NONNULL/r $(ARG_NONNULL_H)' \
	      -e '/definition of _GL_WARN_ON_USE/r $(WARN_ON_USE_H)' \
	      < $(srcdir)/iconv.in.h; \
	} > $@-t && \
	mv $@-t $@
else
iconv.h: $(top_builddir)/config.status
	rm -f $@
endif
MOSTLYCLEANFILES += iconv.h iconv.h-t

EXTRA_DIST += iconv.in.h

## end   gnulib module iconv-h

## begin gnulib module iconv_open

$(srcdir)/iconv_open-aix.h: $(srcdir)/iconv_open-aix.gperf
	$(V_GPERF)$(GPERF) -m 10 $(srcdir)/iconv_open-aix.gperf > $(srcdir)/iconv_open-aix.h-t && \
	mv $(srcdir)/iconv_open-aix.h-t $(srcdir)/iconv_open-aix.h
$(srcdir)/iconv_open-hpux.h: $(srcdir)/iconv_open-hpux.gperf
	$(V_GPERF)$(GPERF) -m 10 $(srcdir)/iconv_open-hpux.gperf > $(srcdir)/iconv_open-hpux.h-t && \
	mv $(srcdir)/iconv_open-hpux.h-t $(srcdir)/iconv_open-hpux.h
$(srcdir)/iconv_open-irix.h: $(srcdir)/iconv_open-irix.gperf
	$(V_GPERF)$(GPERF) -m 10 $(srcdir)/iconv_open-irix.gperf > $(srcdir)/iconv_open-irix.h-t && \
	mv $(srcdir)/iconv_open-irix.h-t $(srcdir)/iconv_open-irix.h
$(srcdir)/iconv_open-osf.h: $(srcdir)/iconv_open-osf.gperf
	$(V_GPERF)$(GPERF) -m 10 $(srcdir)/iconv_open-osf.gperf > $(srcdir)/iconv_open-osf.h-t && \
	mv $(srcdir)/iconv_open-osf.h-t $(srcdir)/iconv_open-osf.h
$(srcdir)/iconv_open-solaris.h: $(srcdir)/iconv_open-solaris.gperf
	$(V_GPERF)$(GPERF) -m 10 $(srcdir)/iconv_open-solaris.gperf > $(srcdir)/iconv_open-solaris.h-t && \
	mv $(srcdir)/iconv_open-solaris.h-t $(srcdir)/iconv_open-solaris.h
BUILT_SOURCES        += iconv_open-aix.h iconv_open-hpux.h iconv_open-irix.h iconv_open-osf.h iconv_open-solaris.h
MOSTLYCLEANFILES     += iconv_open-aix.h-t iconv_open-hpux.h-t iconv_open-irix.h-t iconv_open-osf.h-t iconv_open-solaris.h-t
MAINTAINERCLEANFILES += iconv_open-aix.h iconv_open-hpux.h iconv_open-irix.h iconv_open-osf.h iconv_open-solaris.h
EXTRA_DIST           += iconv_open-aix.h iconv_open-hpux.h iconv_open-irix.h iconv_open-osf.h iconv_open-solaris.h

EXTRA_DIST += iconv.c iconv_close.c iconv_open-aix.gperf iconv_open-hpux.gperf iconv_open-irix.gperf iconv_open-osf.gperf iconv_open-solaris.gperf iconv_open.c

EXTRA_libunistring_la_SOURCES += iconv.c iconv_close.c iconv_open.c

## end   gnulib module iconv_open

## begin gnulib module libunistring


EXTRA_DIST += libunistring.valgrind

## end   gnulib module libunistring

## begin gnulib module limits-h

BUILT_SOURCES += $(LIMITS_H)

# We need the following in order to create <limits.h> when the system
# doesn't have one that is compatible with GNU.
if GL_GENERATE_LIMITS_H
limits.h: limits.in.h $(top_builddir)/config.status
	$(AM_V_GEN)rm -f $@-t $@ && \
	{ echo '/* DO NOT EDIT! GENERATED AUTOMATICALLY! */' && \
	  sed -e 's|@''GUARD_PREFIX''@|GL_UNISTRING|g' \
	      -e 's|@''INCLUDE_NEXT''@|$(INCLUDE_NEXT)|g' \
	      -e 's|@''PRAGMA_SYSTEM_HEADER''@|@PRAGMA_SYSTEM_HEADER@|g' \
	      -e 's|@''PRAGMA_COLUMNS''@|@PRAGMA_COLUMNS@|g' \
	      -e 's|@''NEXT_LIMITS_H''@|$(NEXT_LIMITS_H)|g' \
	      < $(srcdir)/limits.in.h; \
	} > $@-t && \
	mv $@-t $@
else
limits.h: $(top_builddir)/config.status
	rm -f $@
endif
MOSTLYCLEANFILES += limits.h limits.h-t

EXTRA_DIST += limits.in.h

## end   gnulib module limits-h

## begin gnulib module localcharset

libunistring_la_SOURCES += localcharset.c

EXTRA_DIST += localcharset.h

## end   gnulib module localcharset

## begin gnulib module malloca

libunistring_la_SOURCES += malloca.c

EXTRA_DIST += malloca.h

## end   gnulib module malloca

## begin gnulib module snippet/arg-nonnull

# Because this Makefile snippet defines a variable used by other
# gnulib Makefile snippets, it must be present in all makefiles that
# need it. This is ensured by the applicability 'all' defined above.

ARG_NONNULL_H=$(srcdir)/arg-nonnull.h

EXTRA_DIST += arg-nonnull.h

## end   gnulib module snippet/arg-nonnull

## begin gnulib module snippet/c++defs

# Because this Makefile snippet defines a variable used by other
# gnulib Makefile snippets, it must be present in all makefiles that
# need it. This is ensured by the applicability 'all' defined above.

CXXDEFS_H=$(srcdir)/c++defs.h

EXTRA_DIST += c++defs.h

## end   gnulib module snippet/c++defs

## begin gnulib module snippet/unused-parameter

# Because this Makefile snippet defines a variable used by other
# gnulib Makefile snippets, it must be present in all makefiles that
# need it. This is ensured by the applicability 'all' defined above.

UNUSED_PARAMETER_H=$(srcdir)/unused-parameter.h

EXTRA_DIST += unused-parameter.h

## end   gnulib module snippet/unused-parameter

## begin gnulib module snippet/warn-on-use

# Because this Makefile snippet defines a variable used by other
# gnulib Makefile snippets, it must be present in all makefiles that
# need it. This is ensured by the applicability 'all' defined above.

WARN_ON_USE_H=$(srcdir)/warn-on-use.h

EXTRA_DIST += warn-on-use.h

## end   gnulib module snippet/warn-on-use

## begin gnulib module stdbool

BUILT_SOURCES += $(STDBOOL_H)

# We need the following in order to create <stdbool.h> when the system
# doesn't have one that works.
if GL_GENERATE_STDBOOL_H
stdbool.h: stdbool.in.h $(top_builddir)/config.status
	$(AM_V_GEN)rm -f $@-t $@ && \
	{ echo '/* DO NOT EDIT! GENERATED AUTOMATICALLY! */'; \
	  sed -e 's/@''HAVE__BOOL''@/$(HAVE__BOOL)/g' < $(srcdir)/stdbool.in.h; \
	} > $@-t && \
	mv $@-t $@
else
stdbool.h: $(top_builddir)/config.status
	rm -f $@
endif
MOSTLYCLEANFILES += stdbool.h stdbool.h-t

EXTRA_DIST += stdbool.in.h

## end   gnulib module stdbool

## begin gnulib module stdint

BUILT_SOURCES += $(STDINT_H)

# We need the following in order to create <stdint.h> when the system
# doesn't have one that works with the given compiler.
if GL_GENERATE_STDINT_H
stdint.h: stdint.in.h $(top_builddir)/config.status
	$(AM_V_GEN)rm -f $@-t $@ && \
	{ echo '/* DO NOT EDIT! GENERATED AUTOMATICALLY! */'; \
	  sed -e 's|@''GUARD_PREFIX''@|GL_UNISTRING|g' \
	      -e 's/@''HAVE_STDINT_H''@/$(HAVE_STDINT_H)/g' \
	      -e 's|@''INCLUDE_NEXT''@|$(INCLUDE_NEXT)|g' \
	      -e 's|@''PRAGMA_SYSTEM_HEADER''@|@PRAGMA_SYSTEM_HEADER@|g' \
	      -e 's|@''PRAGMA_COLUMNS''@|@PRAGMA_COLUMNS@|g' \
	      -e 's|@''NEXT_STDINT_H''@|$(NEXT_STDINT_H)|g' \
	      -e 's/@''HAVE_C99_STDINT_H''@/$(HAVE_C99_STDINT_H)/g' \
	      -e 's/@''HAVE_SYS_TYPES_H''@/$(HAVE_SYS_TYPES_H)/g' \
	      -e 's/@''HAVE_INTTYPES_H''@/$(HAVE_INTTYPES_H)/g' \
	      -e 's/@''HAVE_SYS_INTTYPES_H''@/$(HAVE_SYS_INTTYPES_H)/g' \
	      -e 's/@''HAVE_SYS_BITYPES_H''@/$(HAVE_SYS_BITYPES_H)/g' \
	      -e 's/@''HAVE_WCHAR_H''@/$(HAVE_WCHAR_H)/g' \
	      -e 's/@''HAVE_LONG_LONG_INT''@/$(HAVE_LONG_LONG_INT)/g' \
	      -e 's/@''HAVE_UNSIGNED_LONG_LONG_INT''@/$(HAVE_UNSIGNED_LONG_LONG_INT)/g' \
	      -e 's/@''APPLE_UNIVERSAL_BUILD''@/$(APPLE_UNIVERSAL_BUILD)/g' \
	      -e 's/@''BITSIZEOF_PTRDIFF_T''@/$(BITSIZEOF_PTRDIFF_T)/g' \
	      -e 's/@''PTRDIFF_T_SUFFIX''@/$(PTRDIFF_T_SUFFIX)/g' \
	      -e 's/@''BITSIZEOF_SIG_ATOMIC_T''@/$(BITSIZEOF_SIG_ATOMIC_T)/g' \
	      -e 's/@''HAVE_SIGNED_SIG_ATOMIC_T''@/$(HAVE_SIGNED_SIG_ATOMIC_T)/g' \
	      -e 's/@''SIG_ATOMIC_T_SUFFIX''@/$(SIG_ATOMIC_T_SUFFIX)/g' \
	      -e 's/@''BITSIZEOF_SIZE_T''@/$(BITSIZEOF_SIZE_T)/g' \
	      -e 's/@''SIZE_T_SUFFIX''@/$(SIZE_T_SUFFIX)/g' \
	      -e 's/@''BITSIZEOF_WCHAR_T''@/$(BITSIZEOF_WCHAR_T)/g' \
	      -e 's/@''HAVE_SIGNED_WCHAR_T''@/$(HAVE_SIGNED_WCHAR_T)/g' \
	      -e 's/@''WCHAR_T_SUFFIX''@/$(WCHAR_T_SUFFIX)/g' \
	      -e 's/@''BITSIZEOF_WINT_T''@/$(BITSIZEOF_WINT_T)/g' \
	      -e 's/@''HAVE_SIGNED_WINT_T''@/$(HAVE_SIGNED_WINT_T)/g' \
	      -e 's/@''WINT_T_SUFFIX''@/$(WINT_T_SUFFIX)/g' \
	      -e 's/@''GNULIB_OVERRIDES_WINT_T''@/$(GNULIB_OVERRIDES_WINT_T)/g' \
	      < $(srcdir)/stdint.in.h; \
	} > $@-t && \
	mv $@-t $@
else
stdint.h: $(top_builddir)/config.status
	rm -f $@
endif
MOSTLYCLEANFILES += stdint.h stdint.h-t

EXTRA_DIST += stdint.in.h

## end   gnulib module stdint

## begin gnulib module striconveh

libunistring_la_SOURCES += striconveh.h striconveh.c
if GL_COND_LIBTOOL
libunistring_la_LDFLAGS += $(LTLIBICONV)
endif

EXTRA_DIST += iconveh.h

## end   gnulib module striconveh

## begin gnulib module striconveha

libunistring_la_SOURCES += striconveha.h striconveha.c

## end   gnulib module striconveha

## begin gnulib module sys_types

BUILT_SOURCES += sys/types.h

# We need the following in order to create <sys/types.h> when the system
# doesn't have one that works with the given compiler.
sys/types.h: sys_types.in.h $(top_builddir)/config.status
	$(AM_V_at)$(MKDIR_P) sys
	$(AM_V_GEN)rm -f $@-t $@ && \
	{ echo '/* DO NOT EDIT! GENERATED AUTOMATICALLY! */'; \
	  sed -e 's|@''GUARD_PREFIX''@|GL_UNISTRING|g' \
	      -e 's|@''INCLUDE_NEXT''@|$(INCLUDE_NEXT)|g' \
	      -e 's|@''PRAGMA_SYSTEM_HEADER''@|@PRAGMA_SYSTEM_HEADER@|g' \
	      -e 's|@''PRAGMA_COLUMNS''@|@PRAGMA_COLUMNS@|g' \
	      -e 's|@''NEXT_SYS_TYPES_H''@|$(NEXT_SYS_TYPES_H)|g' \
	      -e 's|@''WINDOWS_64_BIT_OFF_T''@|$(WINDOWS_64_BIT_OFF_T)|g' \
	      -e 's|@''WINDOWS_STAT_INODES''@|$(WINDOWS_STAT_INODES)|g' \
	      < $(srcdir)/sys_types.in.h; \
	} > $@-t && \
	mv $@-t $@
MOSTLYCLEANFILES += sys/types.h sys/types.h-t

EXTRA_DIST += sys_types.in.h

## end   gnulib module sys_types

## begin gnulib module uniconv/base

BUILT_SOURCES += $(LIBUNISTRING_UNICONV_H)

uniconv.h: uniconv.in.h
	$(AM_V_GEN)rm -f $@-t $@ && \
	{ echo '/* DO NOT EDIT! GENERATED AUTOMATICALLY! */'; \
	  cat $(srcdir)/uniconv.in.h; \
	} > $@-t && \
	mv -f $@-t $@
MOSTLYCLEANFILES += uniconv.h uniconv.h-t

EXTRA_DIST += iconveh.h localcharset.h striconveha.h uniconv.in.h

## end   gnulib module uniconv/base

## begin gnulib module uniconv/u8-conv-from-enc

if LIBUNISTRING_COMPILE_UNICONV_U8_CONV_FROM_ENC
libunistring_la_SOURCES += uniconv/u8-conv-from-enc.c
endif

## end   gnulib module uniconv/u8-conv-from-enc

## begin gnulib module uniconv/u8-strconv-from-enc

if LIBUNISTRING_COMPILE_UNICONV_U8_STRCONV_FROM_ENC
libunistring_la_SOURCES += uniconv/u8-strconv-from-enc.c
endif

EXTRA_DIST += uniconv/u-strconv-from-enc.h

## end   gnulib module uniconv/u8-strconv-from-enc

## begin gnulib module uniconv/u8-strconv-from-locale

if LIBUNISTRING_COMPILE_UNICONV_U8_STRCONV_FROM_LOCALE
libunistring_la_SOURCES += uniconv/u8-strconv-from-locale.c
endif

## end   gnulib module uniconv/u8-strconv-from-locale

## begin gnulib module uniconv/u8-strconv-to-enc

if LIBUNISTRING_COMPILE_UNICONV_U8_STRCONV_TO_ENC
libunistring_la_SOURCES += uniconv/u8-strconv-to-enc.c
endif

## end   gnulib module uniconv/u8-strconv-to-enc

## begin gnulib module uniconv/u8-strconv-to-locale

if LIBUNISTRING_COMPILE_UNICONV_U8_STRCONV_TO_LOCALE
libunistring_la_SOURCES += uniconv/u8-strconv-to-locale.c
endif

## end   gnulib module uniconv/u8-strconv-to-locale

## begin gnulib module unictype/base

BUILT_SOURCES += $(LIBUNISTRING_UNICTYPE_H)

unictype.h: unictype.in.h
	$(AM_V_GEN)rm -f $@-t $@ && \
	{ echo '/* DO NOT EDIT! GENERATED AUTOMATICALLY! */'; \
	  cat $(srcdir)/unictype.in.h; \
	} > $@-t && \
	mv -f $@-t $@
MOSTLYCLEANFILES += unictype.h unictype.h-t

EXTRA_DIST += unictype.in.h

## end   gnulib module unictype/base

## begin gnulib module unictype/bidiclass-of

if LIBUNISTRING_COMPILE_UNICTYPE_BIDICLASS_OF
libunistring_la_SOURCES += unictype/bidi_of.c
endif

EXTRA_DIST += unictype/bidi_of.h

## end   gnulib module unictype/bidiclass-of

## begin gnulib module unictype/category-M

if LIBUNISTRING_COMPILE_UNICTYPE_CATEGORY_M
libunistring_la_SOURCES += unictype/categ_M.c
endif

EXTRA_DIST += unictype/categ_M.h

## end   gnulib module unictype/category-M

## begin gnulib module unictype/category-none

if LIBUNISTRING_COMPILE_UNICTYPE_CATEGORY_NONE
libunistring_la_SOURCES += unictype/categ_none.c
endif

## end   gnulib module unictype/category-none

## begin gnulib module unictype/category-of

if LIBUNISTRING_COMPILE_UNICTYPE_CATEGORY_OF
libunistring_la_SOURCES += unictype/categ_of.c
endif

EXTRA_DIST += unictype/categ_of.h

## end   gnulib module unictype/category-of

## begin gnulib module unictype/category-test

if LIBUNISTRING_COMPILE_UNICTYPE_CATEGORY_TEST
libunistring_la_SOURCES += unictype/categ_test.c
endif

EXTRA_DIST += unictype/bitmap.h

## end   gnulib module unictype/category-test

## begin gnulib module unictype/combining-class

if LIBUNISTRING_COMPILE_UNICTYPE_COMBINING_CLASS
libunistring_la_SOURCES += unictype/combiningclass.c
endif

EXTRA_DIST += unictype/combiningclass.h

## end   gnulib module unictype/combining-class

## begin gnulib module unictype/joiningtype-of

if LIBUNISTRING_COMPILE_UNICTYPE_JOININGTYPE_OF
libunistring_la_SOURCES += unictype/joiningtype_of.c
endif

EXTRA_DIST += unictype/joiningtype_of.h

## end   gnulib module unictype/joiningtype-of

## begin gnulib module unictype/scripts

if LIBUNISTRING_COMPILE_UNICTYPE_SCRIPTS
libunistring_la_SOURCES += unictype/scripts.c
endif

$(srcdir)/unictype/scripts_byname.h: $(srcdir)/unictype/scripts_byname.gperf
	$(V_GPERF)$(GPERF) -m 10 $(srcdir)/unictype/scripts_byname.gperf > $(srcdir)/unictype/scripts_byname.h-t && \
	mv $(srcdir)/unictype/scripts_byname.h-t $(srcdir)/unictype/scripts_byname.h
BUILT_SOURCES        += unictype/scripts_byname.h
MOSTLYCLEANFILES     += unictype/scripts_byname.h-t
MAINTAINERCLEANFILES += unictype/scripts_byname.h
EXTRA_DIST           += unictype/scripts_byname.h

EXTRA_DIST += unictype/scripts.h unictype/scripts_byname.gperf

## end   gnulib module unictype/scripts

## begin gnulib module uninorm/base

BUILT_SOURCES += $(LIBUNISTRING_UNINORM_H)

uninorm.h: uninorm.in.h
	$(AM_V_GEN)rm -f $@-t $@ && \
	{ echo '/* DO NOT EDIT! GENERATED AUTOMATICALLY! */'; \
	  cat $(srcdir)/uninorm.in.h; \
	} > $@-t && \
	mv -f $@-t $@
MOSTLYCLEANFILES += uninorm.h uninorm.h-t

EXTRA_DIST += uninorm.in.h

## end   gnulib module uninorm/base

## begin gnulib module uninorm/canonical-decomposition

if LIBUNISTRING_COMPILE_UNINORM_CANONICAL_DECOMPOSITION
libunistring_la_SOURCES += uninorm/canonical-decomposition.c
endif

## end   gnulib module uninorm/canonical-decomposition

## begin gnulib module uninorm/composition

if LIBUNISTRING_COMPILE_UNINORM_COMPOSITION
libunistring_la_SOURCES += uninorm/composition.c
endif

$(srcdir)/uninorm/composition-table.h: $(srcdir)/uninorm/composition-table.gperf
	$(V_GPERF)$(GPERF) -m 1 $(srcdir)/uninorm/composition-table.gperf > $(srcdir)/uninorm/composition-table.h-t && \
	mv $(srcdir)/uninorm/composition-table.h-t $(srcdir)/uninorm/composition-table.h
BUILT_SOURCES        += uninorm/composition-table.h
MOSTLYCLEANFILES     += uninorm/composition-table.h-t
MAINTAINERCLEANFILES += uninorm/composition-table.h
EXTRA_DIST           += uninorm/composition-table.h

EXTRA_DIST += uninorm/composition-table.gperf

## end   gnulib module uninorm/composition

## begin gnulib module uninorm/decompose-internal

libunistring_la_SOURCES += uninorm/decompose-internal.c

EXTRA_DIST += uninorm/decompose-internal.h

## end   gnulib module uninorm/decompose-internal

## begin gnulib module uninorm/decomposition-table

libunistring_la_SOURCES += uninorm/decomposition-table.c

EXTRA_DIST += uninorm/decomposition-table.h uninorm/decomposition-table1.h uninorm/decomposition-table2.h

## end   gnulib module uninorm/decomposition-table

## begin gnulib module uninorm/nfc

if LIBUNISTRING_COMPILE_UNINORM_NFC
libunistring_la_SOURCES += uninorm/nfc.c
endif

EXTRA_DIST += uninorm/normalize-internal.h

## end   gnulib module uninorm/nfc

## begin gnulib module uninorm/nfd

if LIBUNISTRING_COMPILE_UNINORM_NFD
libunistring_la_SOURCES += uninorm/nfd.c
endif

EXTRA_DIST += uninorm/normalize-internal.h

## end   gnulib module uninorm/nfd

## begin gnulib module uninorm/u32-normalize

if LIBUNISTRING_COMPILE_UNINORM_U32_NORMALIZE
libunistring_la_SOURCES += uninorm/u32-normalize.c
endif

EXTRA_DIST += uninorm/normalize-internal.h uninorm/u-normalize-internal.h

## end   gnulib module uninorm/u32-normalize

## begin gnulib module unistr/base

BUILT_SOURCES += $(LIBUNISTRING_UNISTR_H)

unistr.h: unistr.in.h
	$(AM_V_GEN)rm -f $@-t $@ && \
	{ echo '/* DO NOT EDIT! GENERATED AUTOMATICALLY! */'; \
	  cat $(srcdir)/unistr.in.h; \
	} > $@-t && \
	mv -f $@-t $@
MOSTLYCLEANFILES += unistr.h unistr.h-t

EXTRA_DIST += unistr.in.h

## end   gnulib module unistr/base

## begin gnulib module unistr/u32-cpy

if LIBUNISTRING_COMPILE_UNISTR_U32_CPY
libunistring_la_SOURCES += unistr/u32-cpy.c
endif

EXTRA_DIST += unistr/u-cpy.h

## end   gnulib module unistr/u32-cpy

## begin gnulib module unistr/u32-cpy-alloc

if LIBUNISTRING_COMPILE_UNISTR_U32_CPY_ALLOC
libunistring_la_SOURCES += unistr/u32-cpy-alloc.c
endif

EXTRA_DIST += unistr/u-cpy-alloc.h

## end   gnulib module unistr/u32-cpy-alloc

## begin gnulib module unistr/u32-mbtouc-unsafe

if LIBUNISTRING_COMPILE_UNISTR_U32_MBTOUC_UNSAFE
libunistring_la_SOURCES += unistr/u32-mbtouc-unsafe.c
endif

## end   gnulib module unistr/u32-mbtouc-unsafe

## begin gnulib module unistr/u32-strlen

if LIBUNISTRING_COMPILE_UNISTR_U32_STRLEN
libunistring_la_SOURCES += unistr/u32-strlen.c
endif

EXTRA_DIST += unistr/u-strlen.h

## end   gnulib module unistr/u32-strlen

## begin gnulib module unistr/u32-to-u8

if LIBUNISTRING_COMPILE_UNISTR_U32_TO_U8
libunistring_la_SOURCES += unistr/u32-to-u8.c
endif

## end   gnulib module unistr/u32-to-u8

## begin gnulib module unistr/u32-uctomb

if LIBUNISTRING_COMPILE_UNISTR_U32_UCTOMB
libunistring_la_SOURCES += unistr/u32-uctomb.c
endif

## end   gnulib module unistr/u32-uctomb

## begin gnulib module unistr/u8-check

if LIBUNISTRING_COMPILE_UNISTR_U8_CHECK
libunistring_la_SOURCES += unistr/u8-check.c
endif

## end   gnulib module unistr/u8-check

## begin gnulib module unistr/u8-mblen

if LIBUNISTRING_COMPILE_UNISTR_U8_MBLEN
libunistring_la_SOURCES += unistr/u8-mblen.c
endif

## end   gnulib module unistr/u8-mblen

## begin gnulib module unistr/u8-mbtouc

if LIBUNISTRING_COMPILE_UNISTR_U8_MBTOUC
libunistring_la_SOURCES += unistr/u8-mbtouc.c unistr/u8-mbtouc-aux.c
endif

## end   gnulib module unistr/u8-mbtouc

## begin gnulib module unistr/u8-mbtouc-unsafe

if LIBUNISTRING_COMPILE_UNISTR_U8_MBTOUC_UNSAFE
libunistring_la_SOURCES += unistr/u8-mbtouc-unsafe.c unistr/u8-mbtouc-unsafe-aux.c
endif

## end   gnulib module unistr/u8-mbtouc-unsafe

## begin gnulib module unistr/u8-mbtoucr

if LIBUNISTRING_COMPILE_UNISTR_U8_MBTOUCR
libunistring_la_SOURCES += unistr/u8-mbtoucr.c
endif

## end   gnulib module unistr/u8-mbtoucr

## begin gnulib module unistr/u8-prev

if LIBUNISTRING_COMPILE_UNISTR_U8_PREV
libunistring_la_SOURCES += unistr/u8-prev.c
endif

## end   gnulib module unistr/u8-prev

## begin gnulib module unistr/u8-strlen

if LIBUNISTRING_COMPILE_UNISTR_U8_STRLEN
libunistring_la_SOURCES += unistr/u8-strlen.c
endif

## end   gnulib module unistr/u8-strlen

## begin gnulib module unistr/u8-to-u32

if LIBUNISTRING_COMPILE_UNISTR_U8_TO_U32
libunistring_la_SOURCES += unistr/u8-to-u32.c
endif

## end   gnulib module unistr/u8-to-u32

## begin gnulib module unistr/u8-uctomb

if LIBUNISTRING_COMPILE_UNISTR_U8_UCTOMB
libunistring_la_SOURCES += unistr/u8-uctomb.c unistr/u8-uctomb-aux.c
endif

## end   gnulib module unistr/u8-uctomb

## begin gnulib module unitypes

BUILT_SOURCES += $(LIBUNISTRING_UNITYPES_H)

unitypes.h: unitypes.in.h
	$(AM_V_GEN)rm -f $@-t $@ && \
	{ echo '/* DO NOT EDIT! GENERATED AUTOMATICALLY! */'; \
	  cat $(srcdir)/unitypes.in.h; \
	} > $@-t && \
	mv -f $@-t $@
MOSTLYCLEANFILES += unitypes.h unitypes.h-t

EXTRA_DIST += unitypes.in.h

## end   gnulib module unitypes

## begin gnulib module verify


EXTRA_DIST += verify.h

## end   gnulib module verify

## begin gnulib module xalloc-oversized


EXTRA_DIST += xalloc-oversized.h

## end   gnulib module xalloc-oversized


mostlyclean-local: mostlyclean-generic
	@for dir in '' $(MOSTLYCLEANDIRS); do \
	  if test -n "$$dir" && test -d $$dir; then \
	    echo "rmdir $$dir"; rmdir $$dir; \
	  fi; \
	done; \
	:
