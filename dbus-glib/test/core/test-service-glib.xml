<?xml version="1.0" encoding="UTF-8" ?>

<node name="/org/freedesktop/DBus/GLib/Tests/MyTestObject">
  <interface name="org.freedesktop.DBus.GLib.Tests.MyObject">
    <property name="this_is_a_string" type="s" access="readwrite"/>
    <property name="no-touching" type="u" access="read"/>
    <property name="SuperStudly" type="d" access="readwrite"/>

    <method name="DoNothing">
    </method>

    <method name="Increment">
      <arg type="u" name="x" />
      <arg type="u" direction="out" />
    </method>

    <method name="IncrementRetval">
      <arg type="u" name="x" />
      <arg type="u" direction="out">
	<annotation name="org.freedesktop.DBus.GLib.ReturnVal" value=""/>
      </arg>
    </method>

    <method name="IncrementRetvalError">
      <arg type="u" name="x" />
      <arg type="u" direction="out">
	<annotation name="org.freedesktop.DBus.GLib.ReturnVal" value="error"/>
      </arg>
    </method>

    <method name="ThrowError">
    </method>

    <method name="ThrowUnregisteredError">
    </method>

    <method name="Uppercase">
      <arg type="s" direction="in" />
      <arg type="s" direction="out" />
    </method>

    <method name="ManyArgs">
      <arg type="u" name="x" direction="in" />
      <arg type="s" name="str" direction="in" />
      <arg type="d" name="trouble" direction="in" />
      <arg type="d" name="d_ret" direction="out" />
      <arg type="s" name="str_ret" direction="out" />
    </method>

    <method name="ManyReturn">
      <arg type="u" direction="out" />
      <arg type="s" direction="out" />
      <arg type="i" direction="out" />
      <arg type="u" direction="out" />
      <arg type="u" direction="out" />
      <arg type="s" direction="out">
	<annotation name="org.freedesktop.DBus.GLib.Const" value=""/>
      </arg>
    </method>

    <method name="Stringify">
      <arg type="v" name="val" direction="in"/>
      <arg type="s" direction="out"/>
    </method>

    <method name="Unstringify">
      <arg type="s" name="val" direction="in"/>
      <arg type="v" direction="out"/>
    </method>

    <method name="Recursive1">
      <arg type="au" direction="in"/>
      <arg type="u" direction="out"/>
    </method>

    <method name="Recursive2">
      <arg type="u" direction="in"/>
      <arg type="au" direction="out"/>
    </method>

    <method name="ManyUppercase">
      <arg type="as" direction="in"/>
      <arg type="as" direction="out"/>
    </method>

    <method name="StrHashLen">
      <arg type="a{ss}" direction="in"/>
      <arg type="u" direction="out"/>
    </method>

    <method name="SendCar">
      <arg type="(suv)" direction="in"/>
      <arg type="(uo)" direction="out"/>
    </method>

    <method name="GetHash">
      <arg type="a{ss}" direction="out"/>
    </method>

    <method name="RecArrays">
      <arg type="aas" name="val" direction="in"/>
      <arg type="aau" direction="out"/>
    </method>

    <method name="Objpath">
      <arg type="o" direction="in"/>
      <arg type="o" direction="out">
	<annotation name="org.freedesktop.DBus.GLib.Const" value=""/>
      </arg>
    </method>

    <method name="GetObjs">
      <arg type="ao" direction="out"/>
    </method>

    <method name="IncrementVal">
    </method>

    <method name="AsyncIncrement">
      <annotation name="org.freedesktop.DBus.GLib.Async" value=""/>
      <arg type="u" name="x" />
      <arg type="u" direction="out" />
    </method>

    <method name="AsyncThrowError">
      <annotation name="org.freedesktop.DBus.GLib.Async" value=""/>
    </method>
    
    <method name="GetVal">
      <arg type="u" direction="out" />
    </method>

    <method name="ManyStringify">
      <arg type="a{sv}" direction="in"/>
      <arg type="a{sv}" direction="out"/>
    </method>

    <method name="EchoVariant">
      <arg type="v" direction="in" />
      <arg type="v" direction="out" />
    </method>

    <method name="EchoSignature">
      <arg type="g" direction="in" />
      <arg type="g" direction="out" />
    </method>

    <method name="ProcessVariantOfArrayOfInts123">
      <arg type="v" direction="in" />
    </method>

    <method name="DictOfDicts">
      <arg type="a{sa{ss}}" direction="in"/>
      <arg type="a{sa{ss}}" direction="out"/>
    </method>

    <method name="DictOfSigs">
      <annotation name="org.freedesktop.DBus.GLib.Async" value=""/>
      <arg type="a{gas}" direction="in" />
      <arg type="a{gas}" direction="out" />
    </method>

    <method name="DictOfObjs">
      <annotation name="org.freedesktop.DBus.GLib.Async" value=""/>
      <arg type="a{oao}" direction="in" />
      <arg type="a{oao}" direction="out" />
    </method>

    <method name="EmitFrobnicate">
    </method>

    <method name="UnsafeDisableLegacyPropertyAccess">
    </method>

    <!-- Export signals -->
    <signal name="Frobnicate"/>

    <signal name="Objectified">
      <arg type="o"/>
    </signal>

    <method name="Terminate">
    </method>
  </interface>

  <!-- Test multiple interfaces on the same object -->

  <interface name="org.freedesktop.DBus.GLib.Tests.FooObject">
    <method name="GetValue">
      <arg type="u" direction="out" />
    </method>

    <method name="EmitSignals">
    </method>

    <signal name="Sig0"/>

    <signal name="Sig1"/>

    <method name="EmitSignal2">
    </method>

    <signal name="Sig2"/>

    <method name="Terminate">
    </method>

  </interface>

</node>
