<%args>
bool start;
bool cleanup;
</%args>
<%include>
global.ecpp
</%include>
<%pre>

#include <cxxtools/thread.h>

class Report : public tnt::BackgroundTask
{
  public:
    Report()
      : tnt::BackgroundTask(cxxtools::Timespan(10, 0))
      { }
    void execute();
};

// simulate a long running task
void Report::execute()
{
    while (progress() < 100)
    {
        // do the work
        cxxtools::Thread::sleep(100);
        updateProgress(progress() + 1);
    }

}

</%pre>
<%cpp>

if (start)
{
    unsigned id = tnt::BackgroundWorker::it().runTask(new Report());
    activeJobs.insert(id);
}

if (cleanup)
{
    for (std::set<unsigned>::iterator it = activeJobs.begin(); it != activeJobs.end(); )
    {
        if (tnt::BackgroundWorker::it().getTask(*it))
            ++it;
        else
        {
            activeJobs.erase(it);
            it = activeJobs.begin();
        }
    }
}

</%cpp>
<html>
<head>
    <title>Background job demo</title>
</head>
<body>
  <script src="ajax" type="text/javascript"></script>
  <script type="text/javascript">
     window.setInterval("updateStatus()", 1000);

     function updateStatus()
     {
       ajaxGet("status", function (request) {
         document.getElementById("status")
            .innerHTML = request.responseText;
       });
     }

  </script>
    <form method="post">
        <input type="submit" name="start" value="start new job">
        <input type="submit" name="cleanup" value="remove timed out jobs">
    </form>

    <div id="status"><&status></div>

</body>
</html>
