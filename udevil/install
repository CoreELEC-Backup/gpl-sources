#!/bin/bash
# udevil installer
# Usage:  ./install [CONFIGURE-OPTIONS]

build_deps='autotools-dev build-essential libc6 libglib2.0-0 intltool pkg-config libglib2.0-dev fakeroot libudev0 (>=143) libudev-dev'

if [ "$1" = "--help" ]; then
	./configure --help
	exit
fi

echo "Running configure:  ./configure \"$@\""
./configure "$@"
if [ $? -ne 0 ]; then
	echo
	echo "configure was not successful, probably due to missing build"
	echo "dependencies.  Examine the message above to determine what is missing"
	echo "on your system, install the appropriate package, and try this installer"
	echo "again."
	echo
	echo "Build dependencies include (package names may vary on your distro):"
	echo "${build_deps}"
	echo
	exit 1
fi
echo
echo "Running make..."
make 2>&1 | grep "error:"
if [ ! -e src/udevil ]; then
	echo
	echo "make was not successful, possibly due to missing build"
	echo "dependencies.  Examine the errors above to determine what is missing"
	echo "on your system, install the appropriate packages, and try this installer"
	echo "again.  If no error is displayed, you may need to follow the manual"
	echo "build instructions in the README to see all of make's output."
	echo
	echo "Build dependencies include (package names may vary on your distro):"
	echo "${build_deps}"
	echo
	exit 1
fi
echo

echo "udevil appears to have been built successfully.  To install it, you"
echo "may need to enter your root or administrator password below..."
echo
wh_sudo="$( which sudo 2>/dev/null )"
if [ -z "$wh_sudo" ]; then
	echo "Running su -c \"make install\""
	su -c "make install"
else
	echo "Running sudo make install"
	sudo make install
fi
if [ $? -ne 0 ]; then
	echo
	echo "Error: make install was not successful."
	echo
	exit 1
fi

echo
echo "Installation appears successful."
echo

exit

