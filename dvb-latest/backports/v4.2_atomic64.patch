diff --git a/drivers/media/rc/rc-ir-raw.c b/drivers/media/rc/rc-ir-raw.c
index 2ab8a2b..c76da2e 100644
--- a/drivers/media/rc/rc-ir-raw.c
+++ b/drivers/media/rc/rc-ir-raw.c
@@ -16,7 +16,8 @@ static LIST_HEAD(ir_raw_client_list);
 /* Used to handle IR raw handler extensions */
 static DEFINE_MUTEX(ir_raw_handler_lock);
 static LIST_HEAD(ir_raw_handler_list);
-static atomic64_t available_protocols = ATOMIC64_INIT(0);
+static DEFINE_MUTEX(available_protocols_lock);
+static u64 available_protocols;
 
 static int ir_raw_event_thread(void *data)
 {
@@ -228,7 +229,11 @@ EXPORT_SYMBOL_GPL(ir_raw_event_handle);
 u64
 ir_raw_get_allowed_protocols(void)
 {
-	return atomic64_read(&available_protocols);
+	u64 protocols;
+	mutex_lock(&available_protocols_lock);
+	protocols = available_protocols;
+	mutex_unlock(&available_protocols_lock);
+	return protocols;
 }
 
 static int change_protocol(struct rc_dev *dev, u64 *rc_proto)
@@ -673,7 +678,9 @@ int ir_raw_handler_register(struct ir_raw_handler *ir_raw_handler)
 {
 	mutex_lock(&ir_raw_handler_lock);
 	list_add_tail(&ir_raw_handler->list, &ir_raw_handler_list);
-	atomic64_or(ir_raw_handler->protocols, &available_protocols);
+	mutex_lock(&available_protocols_lock);
+	available_protocols |= ir_raw_handler->protocols;
+	mutex_unlock(&available_protocols_lock);
 	mutex_unlock(&ir_raw_handler_lock);
 
 	return 0;
@@ -693,7 +700,9 @@ void ir_raw_handler_unregister(struct ir_raw_handler *ir_raw_handler)
 			ir_raw_handler->raw_unregister(raw->dev);
 		ir_raw_disable_protocols(raw->dev, protocols);
 	}
-	atomic64_andnot(protocols, &available_protocols);
+	mutex_lock(&available_protocols_lock);
+	available_protocols &= ~protocols;
+	mutex_unlock(&available_protocols_lock);
 	mutex_unlock(&ir_raw_handler_lock);
 }
 EXPORT_SYMBOL(ir_raw_handler_unregister);
