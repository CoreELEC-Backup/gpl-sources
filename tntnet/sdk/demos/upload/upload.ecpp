<%pre>
#include <cxxtools/hdstream.h>
#include <cxxtools/md5stream.h>
</%pre>
<html>
 <body>

  <# for upload we need to use this enctype-attribute #>
  <form method="post" enctype="multipart/form-data">

   <input type="file" name="upload">
   <input type="submit">

  </form>

<{

  // request.getMultipart() gives us access to all parts of
  // the multipart-encoded request
  const tnt::Multipart& mp = request.getMultipart();

  // we look for a part named like our name-attribute of the upload-field
  tnt::Multipart::const_iterator it = mp.find("upload");

  if (it != mp.end())
  {
    // we got a const-iterator to the uploaded data

    cxxtools::Md5stream md5stream;
    std::copy(it->getBodyBegin(),
              it->getBodyEnd(),
              std::ostreambuf_iterator<char>(md5stream));
}>

    <p>
    <$ it->getSize() $> bytes received<br>
    md5sum: <$ md5stream.getHexDigest() $><br>
    data:<br>

<pre>
<{

  // cxxtools::Hdostream is a outstream, which converts the data to a hexdump
  // and prints it to a target-ostream. "reply.out()" gives us a ostream
  // to our client.

  cxxtools::Hdostream hd(reply.sout());

  // hexdump first 1k of uploaded file
  if (it->getSize() > 1024)
  {
    std::copy(it->getBodyBegin(),
              it->getBodyBegin() + 1024,
              std::ostreambuf_iterator<char>(hd));
  }
  else
  {
    std::copy(it->getBodyBegin(),
              it->getBodyEnd(),
              std::ostreambuf_iterator<char>(hd));
  }

  // print last line
  hd.flush();

}>
</pre>
    </p>
<{
  }
}>
 </body>
</html>

